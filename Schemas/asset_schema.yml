---
# TODO: 
#   NULL  # allowing the possibility of no knowledgeables, interaction between Status and State, location information rules

title: asset
$id: ./objectDefs/asset
$schema: 'http://json-schema.org/draft-07/schema'
type: object

properties:

  "corporate asset ID":
    type: string
    description: A read-only UUID, generated by the system, to uniquely identify the asset the asset record.
    $comment: >
      #PROCESS: UUID
        Upon the creation of a new asset record not from the GIS, insert UUID Version 4 value
      #PROCESS: GIS UID
        Upon the creation of a new asset record brought over from the GIS, use the unique GIS ID.
      --  
      Note to TW: 
      - UUID has a distinct advantage over a simple serial number - we do not need a script to check for repetition. For instance, when we are onboarding an asset in GIS, we don't need to check the WMS to see if the ID was already taken.
      - We would prefer GIS and all other system producing asset information to use the UUID. 

#========================

  "asset name":
    type: string 
    description: The human readable name of the asset.
    $comment: >
      #PROCESS: Automatic Name Generation For Manufactured Asset:
        If the asset is a "manufactured asset", then the value must be the automatic concatenation of the following property values
            - properties."asset class".properties."class name"
            - properties."product object".properties."manufacturer" 
            - properties."product object".properties."model"
            - properties."product object".properties."catalog configuration code"
            - properties."OEM serial"
        else if the asset is NOT a "Manufacturered Asset"
          then the value must be typed in by the user. 

#========================

  "asset class":
    $ref: .IBM_Maximo_object/assetClassificationObject
    description: indicates a class to which this asset is an instance
  
#========================

  "manufactured asset":
    type: boolean # No null value allowed becuase this information is self-evident to anyone work with Toronto Water
    description: a asset is a manufactured asset if it is made as an instance of a product-line of a commercial entity.
    $comment: >
      #PROCESS: SET DEFAULT VALUE:
        At record creation, set value to true.
      #PROCESS: EVENT-DRIVEN VALUE CHANGE:
        Upon the event of a properties."asset class" value change;  
          if properties."asset class".properties."non-manufactured" = true;
          then set the value to true;
          else set the value to false.
      --
      Note:
        This value drives the automatic name generation of properties."asset name".
  
#========================

  "mobile asset":
    type: boolean
    description: An asset is mobile if while it is in commission, if it is used beyond permanent installation. Instead, it is taken from place to place.
    $comment: >
      #PROCESS: SET DEFAULT VALUE:
        At record creation, set value to false.
      #PROCESS: EVENT-DRIVEN VALUE CHANGE:
        Upon the event of a properties."asset class" value change;  
          if properties."asset class".properties."mobile asset" = true;
          then set the value to true;
          else set the value to false.
        
#========================

  "status":
    type: string
    description: Status indicates whether the asset is present at Toronto Water, alterntively, it give latest and the highest level knowledge (or the lack thereof) about the asset's presence. 
    track: true
    enum:
      - "planned"
      - "installed / in-hand"
      - "removed from TW"
      - "abandoned in place"
      - "missing"
      - "lost"
    $comment: this data field is not nullable becuase the lack of knowledge is explicitly expressed as "missing" and "lost" (no need to express them using a blank data field).

#========================

  "operating state":
    type: [string, null]
    description: Indicates whether that asset is available for doing the work that it is assigned at any moment. Only applies to asset that is assigned to a role or a user-group.
    track: true
    enum:
      - "available (up)"
      - "unavailable (down)"
      - "not assigned role / user"
      - "not applicable"  #not applicable is being represented explicitly
    
#========================

  "assignment type":
    type: string
    description:
    enum:
      - to a role
      - to a user group
      - to a single user
    $comment: >
      This datafield tells tell us the type of assignment the asset cannot have (non-existence known).
    
#========================

  "assigned to role":
    $ref: .objectDefs/role
    description: Role that the asset is presently designated to play. This value persists even if the asset is temporarily removed from the exactly location of the role (for reasons such as repair).
    track: true
    $comment: >
      
#========================

  "assigned to user group":
    $ref: .IBM_Maximo_object/group
    description: a group of people, sucha as a facility, work area, or crew to whom the asset is assigned for use. 

#========================

  "assigned to user":
    $ref: .IBM_Maximo_object/person
    description: Indicates the assignment of asset (usually movbile tools) that does not have a system role.
    track: true

#========================

  "maintenance group":
    $ref: .IBM_Maximo_object/group
    track: true

#========================
  
  "GIS object ID":
    type: string
    description: This is the ID of the equivalent object (asset or role) in GIS. Having this value suggests that the original record was created in GIS and was copied over to WMS through the data integration link. 

#========================

  "located in space":
    $ref: .objectDefs/space
    track: true

#========================

  "service address or coordinate": 
    $ref: .IBM_Maximo_object/serviceAddress
    $comment: this is referencing Maximo's native service address object
    track: true

#========================
  
  "parent assembly":
    oneOf: [$ref: ./objectDefs/asset, type: null]
    track: true
    $comment: >
      This property is not meant to be use for specifying the asset hierarchy parent. This property is to be used to express that an asset is a part of a trackable assembly.

#========================
  
  "purchased under project":
    type: string
    description: the project ID

#========================

  "first day of operation":
    type: [string, null]
    description: The date that asset started to perform useful work for Toronto Water, regardless of whether it is being operated by Toronto Water or a contractor
    $comment: >

#========================

  "year built":
    type: [number, null]
    description: the year the asset was made
    $comment: > 
      This is needed to determine the model year of certain asset.
  
#========================

  "product object":
    oneOf: [$ref: .objectDefs/product, type: null]
    description: an object that includes the information on the manufacturer, model, sub-model, can catalog/configuration code of the asset.

#========================

  "OEM serial":
    type: [string, null]
    description: The serial number, affixed on the asset, designated by the manufacturer.
  
  "does not have a OEM serial?":
    type: [boolean, null]
    $comment: If the serial number is missing, this piece of information qualifies the reason - whether the serial number is not present on the asset (true value) or we don't know (null value)

#========================

  "purchase cost":
    type: number

#========================

  "warranty expiration date":
    type: string

#========================

  "record retired":
    type: Boolean
    track: true
    hidden: true

#========================

  "record retirement reason":
    type: string
    hidden: true
    track: true
    enum: >
      - "existing asset removed"
      - "missing asset confirmed as lost"
      - "planned asset never received"
      - "record created by mistake"
    $comment: >
      11/14/23: While most of these reasons mirror the the states of the record. "record created by mistake" does not.  When this value is selected, we are saying that the record does not reflect a asset, existent, past, or planned. 
      04/10/24: 


#===Background Data Fields, Not Shown in UI====


  "major TW asset group":
    type: string
    invisible: true
    enum:
      - Drinking Water Network
      - Drinking Water Treatment Plants
      - Waste and Storm Water Network
      - Wastewater Treatment Plants
      - Independent Building
      - Multiple Major Systems
    $comment: >
      Note that this field is populated automatically, and not available for user to edit. Use-case: asset from the GIS will not be indexed on the hierarchy. The main use of this datafield is to provide a simple handle term, when one needs to summarize the collection of all assets imported from a certain layer(s) the GIS.

  
##################################################################################
# DATA INTEGRITY RULES
##################################################################################
allOf: 
  #RULE: if from GIS then populate GeoID

  #RULE: Data fields that are unconditionally required on every record
  
  - required: 
    - "corporate asset ID"
    - "asset name"
    - "asset class"
    - "manufactured asset"
    - "mobile asset"
    
    # Status
    - "status"
    - "operating state"
    
    # Assignment
    - "assignment type"

    - "assigned to role"
    - "assigned to user group"
    - "assigned to user"
  
    - "maintenance group"

    # Location
    - "GIS object ID"
    - "located in space"
    - "service address or coordinate"
    - "parent assembly"

    - "purchased under project"

    - "first day of operation"
    - "year built"
    
    - "product object"
    - "does not have a OEM serial?"
    - "OEM serial"
    - "purchase cost"

    - "warranty expiration date"

    - "record retired"
    - "record retirement reason"

    - "major TW asset group"

  #RULE:
  # - IN COMMON LANGUAGE: If the asset is a manufacturered asset, then the information on product and OEM serial is required.
   # - CODE:

  - if:
    properties:
      "manufactured asset":
        const: true
    then:
      not:
        anyOf:
          - properties: 
            "product object":
              const: null
          - properties: 
            "OEM serial":
              const: null

  #RULE:
  # - IN COMMON LANGUAGE: An asset may either be assigned to a role, user group, or a user.
  # - CODE:
   
  - oneOf:
    - oneOf:
      - properties:
        "assigned to role":
          not:
            const: null
      - properties:
        "assigned to user group":
          not:
            const: null     
      - properties:
        "assigned to user":
          not:
            const: null
    - properties:
      "assigned to role":
        const: null
      "assigned to user group":
        const: null       
      "assigned to user":
        const: null 
  
  #RULE:
  # - IN COMMON LANGUAGE: every asset may have only one property that indicates its location.
  # - CODE:

  - oneOf:
    - oneOf:
      - properties:
        "assigned to role":
          not:
            const: null
      - properties:
        "located in space":
          not:
            const: null
      - properties:
        "service address or coordinate":
          not:
            const: null
      - properties:
        "parent assembly":
          const: null
    - properties:
      "assigned to role":
        const: null
      "located in space":
        const: null
      "service address or coordinate":
        const: null
      "parent assembly":
        const: null

  #===============================================================
  # RULE-SET: Relation between Operating State and Asset Assignment
  #===============================================================

  #RULE:
  # - IN COMMON LANGUAGE: if an asset is neither assignd to a role, group, nor someone, then its [properties."operating state"] must be "not assigned work". The vice versa is also true.
  # - CODE:

  - if:
    properties:
      "assigned to role":
        const: null
      "assigned to user group":
        const: null
      "assigned to user":
        const: null    
    then:
      - properties:
        "operating state":
          const: "not assigned work"

  #PROCESS: Upon the condition in the IF block being satisfied, assert the [properties."operating state"] value to "not assigned work".

  #---

  - if:
    allOf:
      - properties:
        "operating state":
          const: "not assigned work"
    then:
      - properties: 
        "assigned to role":
            const: null
      - properties: 
        "assigned to user group":
            const: null
      - properties: 
        "assigned to user":
            const: null

  #PROCESS: Upon [properties."operating state"] value being set to "not assigned work", assert the condition specified in the THEN block. 


  #=====================================================
  # RULE-SET: Relation Between Status and Operating State
  #=====================================================

  #RULE: 
  # - IN COMMON LANGUAGE: If the asset is not "in TW's possession", then it could not be said have a operating state.
  # - CODE:

  - if:
    properties:
      "status":
        not:
          - const: "in TW's possession"
    then: 
      properties:
        "operating state":
          - const: "not applicable"

  #PROCESS: Upon one of the [properties."status"] values in the IF block being chosen, assert the [properties."operating state"] value to "not applicable".

  #PROCESS: Upon the [properties."operating state"] value in the THEN block being chosen - i.e., any value except "not applicable", then 1, constraint the selectable values of [properties."status"] to the list in the IF block, and 2, clear the current value of [properties."status"], if it is not in the list - i.e., the value is "in TW's posession".

  #---

  #RULE:
  # IN COMMON LANGUAGE: If the asset has a operating state, then it must be "in TW's possession".
  # CODE:

  - if:
    properties:
      "operating state":
        oneOf:
        - const: "available for work (up)"
        - const: "unavailable for work (down)"
        - const: "not assigned work"
    then:
      "status":
        const: "in TW's possession"

  #PROCESS: Upon one of the [properties."operating state"] values in the IF block being chosen, assert the [properties."status"] value in the THEN block.

  #PROCESS: Upon the [properties."status"] value in the THEN block being chosen, then 1, constraint the selectable values of [properties."operating state"] to the list in the IF block, and 2, clear the current value of [properties."operating state"], if it is not in the list.

#==========================

$comment: >
  Rules yet to be expressed:
  [ ] Rules and processes to be transcribed from English:
    - validation role associated with an asset: Role Classification must be "Discrete Asset Role", and must not be a "collection of roles".

  

