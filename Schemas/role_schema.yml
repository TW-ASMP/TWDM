title: role
$id: objectDefs/role
$schema: 'http://json-schema.org/draft-07/schema'
type: object

# To thinkin about
#   [] self: role must have a location

"properties":
  "Role Number":
    type: string
    description: This is also known as the "tag number"

  "role name":
    const: >
      ${properties.roleClass.properties.className};
      childOf: ${properties.parentRole.properties.roleNumber};
      serving: ${properties.clientRoleServed.properties.roleNumber};
    description: A description of the role, in terms of its relations to its parent role and the roles that it presently serves
    # MT []: would you like me to move this into individual roles?

  "parent entity":
    $ref: .objectDefs/role
    description: the parent role

  "role class":
    $ref: .IBM_Maximo_object/classifcationObject # This is not specified by Toronto Water, by is assumed to exit in Maximo
    description: 

  "client role served":
    $ref: .objectDefs/role
    description: >
      Specifies the role (more precisely the asset serving in the role), that this role is serving
      Form example, if the present role is that of a valve, then its client may be a pump.
    # If we have a valve role, the client that it serves may be a pump role.

  "role technical requirement description":
    ref: string
    description: >
      A free text description of the performance requirements of the role. 
      For example, weight in kg for a lifting device.
    # Eventually, this should be formalized as properties of the specificat role class.
    # For now, this can be entered as key value pairs
    # AK []: would you like me to move this into individual roles?
  
  "located in space":
    $ref: .objectDefs/space
    description: 

  "service address":
    $ref: .IBM_Maximo_object/serviceAddress
    description: x and y coordinate, or the street address

  "operational criticality":
    type: string
    enum:
      - "1"
      - "2"
      - "3"
      - "4"
      - "5"
    description:

  "hazard criticality":
    type: string
    enum:
      - "1"
      - "2"
      - "3"

  ################################## RULES ##################################
  if:
    oneOf:
      - roleClass:
          properties:
              className:
                const: "pumping station"
      - roleClass:
          properties:
              className:
                const: "water treatment plant"
      - roleClass:
          properties:
              className:
                const: "large chamber"
  then:
    required:
      - 
#There could be more specialized roles, such as sensor roles [monitoring] breaker roles [tie-breaker]