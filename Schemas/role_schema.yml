title: role
$id: objectDefs/role
$schema: 'http://json-schema.org/draft-07/schema'
type: object

"properties":

  "role ID":
    type: string
    description: This is also known as the "tag number", if it is an asset role.
    Mx_DB_Loc:
    
  "role name":
    const: >
      ${properties."role class".properties."class name"};
      childOf: ${properties."parent entity".properties."role number"};
      serving: ${properties."client role served".properties."role number"};
    description: A description of the role, in terms of its relations to its parent role and the roles that it presently serves
    # MT []: would you like me to move this into individual roles?

  "parent":
    $ref: .objectDefs/role
    description: the parent role

  "role class":
    $ref: .IBM_Maximo_object/classifcationObject
    description: this field specifies the class of asset that is suppose to occupy this role
    $comment: >
      this field allow the user to specify what the equipment does in the system instead of what the equipment is. For example, for generators, instead of 
        * generator
          * diesel generator
          * natural gas generator
      we would have
        * generator role
          * emergenecy generator role
          * backup generator role
  
  "status":
    type: string
    track: TRUE
    enum:
      - "specified"
      - "realized"
      - "eliminated"
    $comment: >
      This field allows the user to specify whether the role is merely a concept in the design stage -i.e., equivalent to "planned" for assets, or whether the system around the role and supports for asset occupying the it have been contructed - i.e. "realized".
      Note that an "eliminated" role should be removed from the hierarchy, and should not be visible for users conducting maintenance, reliability, planning and scheduling functions. 

  "duty standby designation":
    type: 
      - string
      - NULL
    enum:
      - "duty"
      - "standby"
      - "duty assist"
      - "NONE"

  "client role served":
    $ref: .objectDefs/role
    description: >
      Specifies the role (more precisely the asset serving in the role), that this role is serving. Form example, if the present role is that of a valve, then its client may be a pump.

  "role technical requirement description":
    type: string
    description: >
      A free text description of the performance requirements of the role. 
      For example, weight in kg for a lifting device.
    # Eventually, this should be formalized as properties of the specific role class. For example horsepower for motor class
    # For now, this can be entered as a free text
    # AK []: would you like me to move this into individual roles?
  
  "located in space":
    $ref: .objectDefs/space
    track: TRUE

  "operator group":
    $ref: .IBM_Maximo_object/group
    track: TRUE
    description: group responsible for the operation of the asset, serving in this role

  "service address or coordinate":
    $ref: .IBM_Maximo_object/serviceAddress
    track: TRUE
    description: x and y coordinate, or the street address

  "operational criticality":
    type: string
    enum:
      - "1"
      - "2"
      - "3"
      - "4"
      - "5"

  "hazard criticality":
    type: string
    enum:
      - "1"
      - "2"
      - "3"
      - "4"
      - "5"
  
  "GIS object ID":
    type: string
    description: This is the ID of the equivalent object (asset or role) in GIS. Having this value suggests that the original record was created in GIS and was copied over to WMS through the data integration link. 

  ##### compliance #####

  role guarantees regulated parameter:
    type: Boolean
  
  "regulated parameter(s)":
    type: array
    items:
      title: documented regulated parameter
      type: object
      properties:
        parameter name:
          type: string
        regulatory document and section:
          type: array
      required:
        - parameter name
        - regulatory document and section


  ##### information of retired record #####

  "record retired":
    type: Boolean
    track: TRUE
    hidden: TRUE

  "record retirement reason":
    type: string
    hidden: TRUE
    track: TRUE
    enum:
      - "existing role eliminated"
      - "planned role never realized"
      - "record created by mistake"
  

  ################################## RULES ##################################
  
  # 
  if:
    oneOf:
      - roleClass:
          properties:
              className:
                const: "pumping station"
      - roleClass:
          properties:
              className:
                const: "water treatment plant"
      - roleClass:
          properties:
              className:
                const: "large chamber"
  then:
    required: "GIS object ID"

$comment: >
  [ ] Rules and processes to be transcribed from English:
    - each role can only be occupied by a single asset
    - commissioning date should be written into the record of the asset and the role.
    - certain GIS assets, such as pumping stations, or treatment facilities must be mapped over as roles
    - when a building is removed