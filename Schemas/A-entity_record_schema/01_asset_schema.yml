---
# TODO: 
#   NULL  # allowing the possibility of no knowledgeables, interaction between Status and State, location information rules

$schema: 'http://json-schema.org/draft-07/schema'
title: asset
$id: ./objectDefs/asset
type: object

#############################################################
# 1. OBJECT DEFINITION
#############################################################

properties:
  #==========================================================
  #   Properties Visible on the Record 
  #==========================================================
  asset ID:
    type: string 
    description: 
      A read-only UUID, generated by the system, to uniquely identify the asset record.
    TW_rule: 
      - name: Vertical Asset ID
        id: 41JeoQuvex 
        type: triggered action
        trigger: upon the creation of a new vertical facility asset record
        action: generate UUID Ver4 value as asset ID
        rule implementation status: not started
      - name: Linear Asset ID
        id: Vku-67dDxx
        type: triggered action
        trigger: the creation of a new asset record, corresponding to an asset record in TWAG, through the Maximo-TWAG integration 
        action: copy the TWAG asset record's "Facility ID" value into the "asset ID" 
        rule implementation status: not started
    $comment: |
      UUID has a distinct advantage over a simple serial number - we do not need a script to check for repetition. For instance, when onboarding assets from another system or a spreadsheet, we don't need to check the WMS to see if the ID was already taken.

  #========================

  asset name:
    type: string 
    description: The human readable short description of the asset.
    TW_rule:
      - name: Asset Naming
        id: 4ykh0m_Dle
        type: implication
        description: | #description gives a rule in text or pseudocode.
          if: assetX.properties."manufactured asset" = TRUE
          then:  
            assetX.properties."asset name" value is the semi-colon ("; ") delimited concatenation of the following property values:
            - properties."asset class".properties."class name"
            - properties."commercial product".properties."manufacturer" #[] need update
            - properties."commercial product".properties."model"
            - properties."commercial product".properties."catalog configuration code"
            - properties."OEM serial"
          elif: assetX.properties."manufactured asset" = FALSE
          then: 
            assetX.properties."asset name" value is the semi-colon ("; ") delimited concatenation of the following property values:
            - properties."asset class".properties."class name"
            - "built by: " + properties."delivered under project"
            - "built on: " + properties."year built"
            - properties."assigned to role".properties."role name"
        rule implementation status: false 
    
    $comment: |
        Assumption: anything non-manufactured as built on site for a specific purpose.

  #========================

  TWAG asset:
    type: boolean
    description: A true value indicates that this record represent an asset that is also represented by a record in TWAG. 

  #========================

  privately owned:
    type: boolean
    description: A true value indicates that the asset is either owned by a private citizen or a private organization.
    $comment: |
      The value private is taken out of asset owner organization datafield because it is unambiguous to say that an asset is private asset that is located York Region.


  asset owner organization:
    oneOf: [$ref: .objectDefst/group, type: null]  #referring to an object
    description: Denotes the organization that owns the asset.
    $comment: |
      []RULE:
       # IN COMMON LANGUAGE:
        - Preface: the user must be able to view the organization hierarchy and select an entry from the hierarchy. 
        - Rule Text: the user must see and be able to select organization entries on (a. the first level of the organization hierarchy) AND (b. down the third level of the hierarchy, under the first level entry "City of Toronto)

  #========================

  asset class:
    $ref: .objectDefs/assetItemClassificationObject
    description: Indicates the primitive asset class to which this asset is an instance.

  #========================

  inferred class name(s):
    oneOf: [type: null, type: array]
    items:
      type: string
    TW_rule: |
      []REQ 41Vru1Rrxe This data field should be visible to the users, but should not be editable by the user
    description: Indicates the complex classes to which this asset is an instance. A complex class is defined with reference to a primitive class plus other attributes. An example of a complex class is the TSSA high-pressure boiler class. Â   
    $comment: |
      This field will be populated by a rule processor, either inside Maximo or operating outside with integration to Maximo. An example of the inferred class is "high-pressure boiler".  The values are strings instead of classification objects because the inferred classes will not be in Maximo's asset classification. It is only found in the ontology. 

      
  
  #========================

  is a manufactured asset:
    type: boolean # No null value allowed becuase this information is self-evident
    description: A manufacturered asset is one that is made under a commercial product of a commercial entity.
    $comment: |
      #PROCESS: SET DEFAULT VALUE:
        At record creation, set default value to true.
      #PROCESS: EVENT-DRIVEN VALUE CHANGE:
        Upon the event of a properties."asset class" value change,  
          if properties."asset class".properties."non-manufactured" = true;
          then set the value to true;
          else set the value to false.
      --
      Note:
        This value drives the automatic name generation of properties."asset name".
  
  #========================

  tool:
    type: boolean
    description: An tool is used to enable or enhance the performance of certain maintenance or repair work. Will need to be associated with a generic tool ID, which will then make the asset become a "rotating tool"
  
  tool ID:
    

  mobile tool: 
    type: boolean
    description: An tool that is used beyond a permanent installation; instead, it is taken from place to place.
    $comment: |
      #PROCESS: SET DEFAULT VALUE:
        At record creation, set value to false.
      #PROCESS: EVENT-DRIVEN VALUE CHANGE:
        Upon the event of a properties."asset class" value change;  
          if properties."asset class".properties."mobile tool" = true;
          then set the value to true;
          else set the value to false.

  #========================

  physical status:
    type: string
    description: Indicates whether the asset is present at the City, and more precisely, at its working location. It also indicates when the knowledge of the asset's presence is missing (i.e., it is missing or lost).
    enum:
      - planned
      - in possession
      - installed
      - abandoned in place
      - removed from possession
      - missing 
      - lost
    $comment: |
      This data field is not nullable becauase the lack of knowledge is explicitly expressed as "missing" or "lost", and the non-existence is expressed as "planned" or "removed from possession".

  #========================

  operating state:
    type: string
    description: Indicates whether the asset is available for doing the work that it is assigned at a given moment. Only applies to asset that is assigned to a role, user-group, or user.
    enum:
      - available (up) 
      - unavailable (down)  
      - not applicable
    $comment: |
      The "not applicable" value is being represented explicitly in the value list, because when we are reporting on equipment uptime, we need to know about the periods in which the operating state is not applicable. For example, if the asset is not assigned to any role, organization, or anyone.

  #Assignment Group
  #========================

  assignment type:
    oneof: [type: string, type:null]
    description:
    enum:
      - to a role
      - to a user group
      - to a single user
      - not assigned
    $comment: |
      #UI: render as radial buttons
      #PROCESS, #UI:
        If value = "to a role", then enable "assigned to role" property;
        elif value = "to a user group", then enable "assigned to user group" property;
        elif value = "to a single user", then enable "assigned to user" property;
        elif value = or("not assigned", null), then enable none of the above.
      --
      [] out of date content, review before removal: Note for TW:
        This property is added to assist with the interpretation of the NULL value in "assigned to role", "assigned to user group", or "assigned to user group" property. If the property matches the selected value, then null means no knowledge; if the property does not match, then null means not applicable.  
    
  #------------

  assigned to role:
    oneOf: [$ref: .objectDefs/role, type: null]
    description: Role that the asset is designated to play. This value persists even if the asset is temporarily removed from the location of the role (for reasons such as repair).
        
  #------------

  assigned to user group:
    oneOf: [$ref: .objectDefst/group, type: null]
    description: A group of people, such as a facility, work area, or crew to whom the asset is assigned for use. Indicates the assignment of asset (usually mobile tools) that does not have a system role.

  #------------

  assigned to user:
    oneOf: [$ref: .IBM_Maximo_object/person, type: null]
    description: Indicates the assignment of asset (usually mobile tools) that does not have a system role.

  #========================

  maintenance group:
    oneOf: [$ref: .objectDefs/group, type: null]
    description: >
      Group responsible for the overall maintenance of the asset. For example, a unit, work area, or crew. 
    $comment: | 
      []RULE N1dcgm2Bgx #inference: if the asset is assigned to a role (via properties."assigned to role"), then the value of the maintenance group should be copied from the role.
 

  #Location Group of Properties
  #========================

  located in space:
    oneOf: [$ref: .objectDefs/space, type: null]

  #========================
  
  is a part of the larger asset:
    oneOf: [$ref: .objectDefs/asset, type: null]
    userEditable: false
    $comment: |
      Though it is more elegant to represent the location of a part as the space of a larger asset, this would involve setting up a rule to automatically create a spatial location entity.  Though this is achievable in the work management system, it is no in every other system where we enter assets (e.g. EIW). Also, to always says that the asset is located in a space of a larger asset is not semantically correct. Sometimes, the asset is not so much "in" another asset then being "a part of" it.

      []RULE VkcDoPILgl #inference: This field is to be filled in by a script. The script should fill in the value of properties."asset name" value of the highest-level <discrete asset>, which this asset is a part of.

  #------------------

  service address or coordinate: 
    oneOf: [$ref: .IBM_Maximo_object/serviceAddress, type: null]
    $comment: |
      this is referencing Maximo's native service address object

  #------------------
  
  parent asset:
    oneOf: [$ref: ./objectDefs/asset, type: null]
    description: >
      The value in this property denotes the larger discrete asset or defined collection of assets, to which this asset is a part of.  NOTE: this property is not meant to be used for specifying the system hierarchy parent. That property is found on the role record, not the asset record. 
    $comment: |
      This field is commonly used when the asset is a part of a skid, structural tank, or switchgear cabinet, in which the asset parent in the system hierarchy should be the line entity. As such we will using this field to track that the asset is also a part of a phyical assembly.  We would also be using this field to capture a serialized rotating component as a part of another discrete asset. This field can also be used to indicate an asset membership in a Defined Collection of Assets. 

  #========================
  
  construction contract number:
    oneOf: [type: string, type:null]
    description: The construction contract number assigned by the City

  #=======================
  #RULE[] 4kqvthwPxl #validation: 
    # if properties."operating state" = "available (up)", then one or both of the data fields "first date of City operation" and "warranty start date" will need to have value (i.e., not null).

  first day of City operation:
    oneof: [type: string, type:null]
    $comment: |
      This usually coincides with "warranty start date".  However, if the asset is not delivered through a project, "warranty start date" may be empty. 

  warranty start date:
    oneOf: [type: string, type:null]

  warranty expiration date:
    oneOf: [type: string, type:null]

  #========================

  commercial product:
    oneOf: [$ref: .objectDefs/item, type: null]
    description: 
    # [] should only accept the subset of items that define a commercial product 

  tool commercial product: 

  # you can't plan to use an asset on a job, for anything that is a tool-asset, it behaves just like a assets, you are simplying tracking its movement(transaction)
  

  #========================

  OEM serial:
    oneof: [type: string, type:null]
    description: The serial number, affixed on the asset, designated by the manufacturer.
    $comment: |
      Outcome of TH's discussion within ASMP: The serial number is only populated when an asset experiences a movement (except for movement for removal), or when it is being check into a storeroom.
      Therefore, when the value of the OEM serial is null, it represents the fact that we do not know what the serial number is (and whether it has a serial number at all).
    
  #========================

  purchase cost (CAD):
    oneof: [type: number, type:null]

  #========================

  asset photo(s):
    oneOf: [type: array, type: null]
    items:
      type: string
      contentMediaType: image/png

  #========================

  record retired:
    type: Boolean
    hidden: true
    #[] cannot be on work order, should not show on hierarchy or search result

  record created by mistake:
    type: Boolean
    hidden: true

  record is a duplicate:
    type: Boolean
    hidden: true

  duplicate record of:
    oneOf: [type: array, type: null]
    items:
      type: object
      $ref: .objectDefs/asset

#==========================================================
#   Background Properties Populated Automatically
#==========================================================
  TW Asset Group:
    oneof: [type: string, type:null]
    invisible: true
    inferred: true
    enum:
      - Drinking Water Network
      - Drinking Water Treatment Plants
      - Waste and Storm Water Network
      - Wastewater Treatment Plants
      - Independent Building
      - Multiple Major Systems
    $comment: |
      Note that this property is populated automatically, and not available for user to edit. Use-case: asset from the GIS will not be indexed on the hierarchy. The main use of this property is to provide a simple handle term, when one needs to summarize the collection of all assets imported from a certain layer(s) the GIS.
      
#############################################################
# 2. DATA INTEGRITY RULES
#############################################################

allOf: 
  #Every property is required, some property can return null value. See individual property definitions for detail.
  
  - required: ["asset ID", "asset name", "asset class", "manufactured asset", "mobile tool", "status", "operating state", "assignment type", "assigned to role", "assigned to user group", "assigned to user", "maintenance group", "GIS object ID", "located in space", "service address or coordinate", "parent assembly", "delivered under project", "first day of operation", "year built", "commercial product", "does not have a OEM serial?", "OEM serial", "purchase cost", "warranty expiration date", "record retired", "record retirement reason", "major TW asset group"]

  #[]RULE bOqnNS:
    #description: If the asset is a manufactured asset, then the information on product and OEM serial is required.
    #code:
  - if:
      properties:
        manufactured asset:
          const: true
    then:
      not:
        anyOf:
          - properties: 
              commercial product:
                const: null
          - properties: 
              OEM serial:
                const: null
      errorMessage: "If the asset is a manufactured asset, then the information on product and OEM serial is required."

  #[]RULE 5aIf1K:
    #description: An asset may either be assigned to a role, user group, a user, or it could be unassigned. 
    #code:

  - oneOf:
    - oneOf:
      - properties:
          assigned to role:
            not:
              const: null
      - properties:
          assigned to user group:
            not:
              const: null     
      - properties:
          assigned to user:
            not:
              const: null
    - properties:
        assigned to role:
          const: null
        assigned to user group:
          const: null       
        assigned to user:
          const: null
    errorMessage: "Between \"assigned to role\", \"assigned to user group\", \"assigned to user\", every asset may only have one type assignment."
  

  #===============================================================
  # RULE-SET: Relation between Operating State and Asset Assignment
  #===============================================================

  #[]RULE Lgfsra: #process
    #name: consistency between "operating state" and the asset's assignment
    #description: if an asset is neither assignd to a role, group, nor someone, then its [properties."operating state"] must be "not assigned work". The opposite must also be true.
    # code:
  - if:
      properties: #(C1)
        assigned to role:
          const: null
        assigned to user group:
          const: null
        assigned to user:
          const: null
    then: #(C2)
      properties:
        operating state:
          const: not applicable
      errorMessage: "An asset NOT assigned to a role, user, or user group should not be operating and therefore would not have an operating state"


  #=====================================================
  # RULE-SET: Relation Between Status and Operating State 
  #======================================================

  #[]RULE VkUggNhHle: #process
    #name: Consistency between asset's "status" and "operating state" 
    #description: If the asset is not "installed / in possession", then it must not be said have a operating state.
    #code:
  - if: #(C1)
      properties:
        status: 
          not:
            or:  
              - const: in possession 
              - const: installed
    then: #(C2)
      properties: 
        operating state:
          const: not applicable
      errorMessage: "If an asset is not \"installed \\ in possession\" (see the status property), then it should not have an operating state."  

  - if: #(C2)
      properties:
        operating state:
          const: not applicable
    then: #(C1)
      oneOf:
        - properties:
            status:
              not:
                const: installed / in possession
        - properties:
            assigned to role:
              const: null
            assigned to user group:
              const: null
            assigned to user:
              const: null
      errorMessage: "If an asset does not have an operating state, then it is either 1) not \"installed \\ in possession\" (see the status property) or 2) not assigned to a role, user, or group."


#==========================
 #[]RULE E17jxVhSeg: #validation
  #description: an asset can only occupy a discrete asset role (i.e. a role that is classfied as a subclass of the discrete asset role class).
  #code:
  - if:
      properties:
        assigned to role:
          type: object
    then:
      properties:
        assigned to role:
          properties:
            discrete asset role: # property defined in the role schema
              const: true
      errorMessage: An asset can only occupy a discrete asset role

#==========================

 #[]RULE "If an asset is "installed" (see "status" property) (C1), and assigned to a role (see "assigned to role" property) (C2), and the role has some location information (see "service address or coordinate" and "located in space" property) (3), then the asset would have the same the location information as the role it is assigned to (C4)."

  # IN CODE: 
    # - This rule is not expressible in JSON SCHEMA. If necessary, TW will write custom validation logic.
  
  #PROCESS:  If the condition (C1), (C2) and (C3) are all true, run a process to realize condition (C4). 
#==========================


#############################################################
# 3. SUPPORTING MINOR OBJECT DEFINITION
#############################################################


$comment: |

  
  =========================================

  OPEN AND TODO ITEMS:

    []  - add RULE: asset can be assigned to an asset collection and a group or a person at the same time (though it cannot be assigned to a discrete asset role and a group at the same time)

    [] - rule on location inheritance from role

    [v] - rules on what role, and assets, can be the child of what others. 


    [] - Need to have a different set of data entry (i.e. what is nullable) requirement for Linear assets
    
    
    [] (April 26 Review) assigned to a vehicle is missing - this is a satellite storeroom
          ANS: May 6th: TH: I am covering this with the existing property "located in space"
  
    [] RULE: a general requirement to print error messages


  ================================================

  REVIEW ITEMS (incl completed open items:):
    
    [v] - specify field photos
      AK also supports this

    [N/A] Discussion intention: 
      - for the implementation, we need to fully realize at least one type of activity as a transaction (or pure function) that changes the state of a property of a record. I suggest configuring the following:
        - given the completion of any activity, present the options to change the condition and the availability state of the asset.
        - given the completion of an subclasse of "move and replace" activity, the asset's location and/or physical State should be changed by the transaction
      
    [N/A] Disucussion:
      - Do we want the option to have separate groups being represented for routine maintenace vs reactive maintnenace. Like in D&C. 

    [OPEN] RULE: (May 10 Review) rule suggestion: an asset going into storage should not be assigned to any role or any one.
      [?] Annette,
        Would you want to impmement a) spaces designated for storage or b) real maximo store rooms. Note that option a) seems simple, but involves some complexity for representing assets that are used inside a storage space. (Despite the fact they are inside the storage spaces, they may still be assigned to a role or someone and may still need to be maintained.)

    [V] RULE: check only one asset can be assigned to a role
    
    [?] - Need to incorporate information about ownership from TWAG (whether it is City, private,)
      [] Tony to engage feedback: 
        - Review the two options for "asset owner organization"
        - To take up the proposal of using universal metadata for the value list.
    
    [V] RULE: if from GIS then populate GeoID
      datafield "TWAG asset" is added for this purpose
    
    [V] I separated "privately owned" as its own datafield, with the intent to avoid the confusion
    
    [?] Candice: what does private ownership mean? It is owned by a private citizen or organization or both?

    [V] (April 26 Review) How do we name "non-manufactured" assets? 
          PL: follow what PCS stand is doing. TH: structural asset is the majority and they can be named like a role.
          [] lets review: 
            Do we need to have the year in which it is constructed. I think so, in reporting, it helps to identify the identify of the asset, among a series in history serving in the same role. 

    [?] - OPEN ISSUE from Debbie: Will true âsafetyâ be identified on an asset record (hazards, precautions, loto)?
      Consider adding the one of the following sub-schema to the asset schema. Note the all fields would be populated by the legislative compliance reasoner.
        definitions:


  
  

