---
title: role
$id: objectDefs/role
$schema: 'http://json-schema.org/draft-07/schema'
type: object

"properties":

  #==========================================================
  #   Properties Visible on the Record 
  #==========================================================

  "role ID":
    type: string
    description: This is also known as the "tag number", if it is an asset role.

  #========================
    
  "role name":
    type: string
    const: >
      ${properties."role class".properties."class name"};
      childOf: ${properties."parent entity".properties."role number"};
      serving: ${properties."client role served".properties."role number"};
    description: A description of the role, in terms of its relations to its parent role and the roles that it presently serves
    # MT []: would you like me to move this into individual roles?

  #========================

  "parent":
    $ref: .objectDefs/role
    description: the parent role

  #=======================
  
  "role class":
    $ref: .IBM_Maximo_object/classifcationObject
    description: this field specifies the class of asset that is suppose to occupy this role
    $comment: >
      this field allow the user to specify what the equipment does in the system instead of what the equipment is. For example, for generators, instead of 
        * generator
          * diesel generator
          * natural gas generator
      we would have
        * generator role
          * emergenecy generator role
          * backup generator role

  #========================

  "inferred class":
    type: array
    items:
      oneOf: [type: string, type: null]
    $comment: >
      This field will be populated by a rule processor, either inside Maximo, or operating outside with integration to Maximo. The values are strings, instead of a classification object, because the inferred classes will not be in Maximos asset classfication. It is only found in the ontology. An example of the inferred class is "high pressure boiler". 
      
      #[]REQ 41Vru1Rrxe: This data field should be visible to the users, but should not be editable by the user

  #========================

  "status":
    type: string
    track: TRUE
    enum:
      - "specified"
      - "active"
      - "eliminated"
    $comment: >
      This field allows the user to specify whether the role is merely a concept in the design stage -i.e., equivalent to "planned" for assets, or whether the system around the role and supports for asset occupying the role have been contructed and "realized".
      
      #[]RULE VkiDyJcSxg: Before a role can be eliminated, all children, as well as the decendents of the role in the hierarachy must also be eliminated. 
        comment: a procedure should to be created to allow the recursive elimination of a role and all of its children. 

      #[]RULE VygDC0Frxl: When a role is "eliminated", it must no longer be visible in any view of the role hierarchy. (Its entire branch must not be available either, because all of its decendents would be eliminated as well.)
        []Review with To ASMP: with this rule, we no longer need to have a hierarchy branched for retired roles.   

      #[]RULE EkP5qy5Sxl: If change auditing cannot be turned on, then when a role record status is "eliminated", all the specification in the record's datafields must be frozen.

  #========================

  "duty standby designation":
    type: 
      - string
      - NULL
    enum:
      - "duty"
      - "standby"
      - "NONE"

  #========================

  "role technical requirement description":
    type: string
    $comment: >
      A free text description of the performance requirements of the role. 
      For example, weight in kg for a lifting device.
      Eventually, this information should be replaced by formalized properties associated with specific role class. For example horsepower for motor class role, there would be a requirement a minimum amount of horsepower or torque. 

  #========================
  
  "located in space":
    oneOf: [$ref: .objectDefs/space, type: null]
    track: TRUE

  #========================
  
  "service address or coordinate":
    oneOf: [$ref: .IBM_Maximo_object/serviceAddress, type: null]
    track: TRUE
    description: x and y coordinate, or the street address

  #========================

  "operator group":
    oneOf: [$ref: .objectDefs/group, type: null]
    track: TRUE
    description: group responsible for the operation of the asset, serving in this role
    $comment: >
      []RULE EJ6sBXhBlx: #process
        name: Option to Apply Same Value to Decendent Roles
        description: When a operator group value is specified in a role, the user must be given the option to replicate the same specification in the records of all decendents of the roles in hierarchy. 
  
  #========================

  "maintenance group":
    oneOf: [$ref: .objectDefs/group, type: null]
    track: true
    description: >
      The value in this field denotes the group responsible for the overall maintenance of the asset in the role. For example, a Work Area that is responsible for the preventive maintenance and reactive maintenance (i.e., repair) of a given asset (and the larger system that contains the asset). 
    $comment: >  
      See RULE N1dcgm2Bgx
      []RULE NkqbmQnHgl: #process
        name: Option to Apply Same Value to Decendent Roles
        description: When a maintenance group value is specified in a role, the user must be given the option to replicate the same specification in the records of all decendents of the roles in hierarchy. 

  #========================

  "criticality":
    type: string
    enum:
      - "1"
      - "2"
      - "3"
      - "4"
      - "5"

  #========================
  
  "GIS object ID":
    type: string
    description: This is the ID of the equivalent object (asset or role) in GIS. Having this value suggests that the original record was created in GIS and was copied over to WMS through the data integration link.

  #========================

  ##### compliance #####

  "Highest known EHS or quality requirement level":
    type: string
    enum:
      - legislative
      - corporate policy
      - professional recommendation

  "EHS or quality requirement detail":
    type: string
    $comment: >
      The contents of this field can be update manually, it can also be populated by an external application through an API. The content will likely take the following shape:
        "required action":
        "source of requirement":
        "risk type":

  #========================

  ##### information of retired record #####

  "record retired":
    type: Boolean
    track: TRUE
    hidden: TRUE

  #=======================

  "record retirement reason":
    type: string
    hidden: TRUE
    track: TRUE
    enum:
      - "existing role eliminated"
      - "planned role never realized"
      - "record created by mistake"


  "duplicate record of": #should be an array?
    oneOf: [$ref: .objectDefs/role, type: null]
  
  #==========================================================
  #   Background Properties Populated Automatically
  #==========================================================


#############################################################
# 2. DATA INTEGRITY RULES
#############################################################
  allOf:
    - if:
      oneOf:
        - roleClass:
            properties:
                className:
                  const: "pumping station"
        - roleClass:
            properties:
                className:
                  const: "water treatment plant"
        - roleClass:
            properties:
                className:
                  const: "large chamber"
      then:
        required: "GIS object ID"
  
  #[]RULE:
  # IN COMMON LANGUAGE: At any given time, each role may only have a single asset assigned to it (i.e., associated with the role via the asset's "assigned to role" property).



$comment: >
  OPEN AND TODO ITEMS:
    [x] To have discussion on what we put in for criticality
    [] explicitly specify an unoccupied asset

    [] expression of role equivalence
  
    [] expression of central role in a system

    [] certain GIS assets, such as pumping stations, or treatment facilities must be mapped over as roles
