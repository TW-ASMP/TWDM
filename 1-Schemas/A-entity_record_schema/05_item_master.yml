---
$schema: "http://json-schema.org/draft-07/schema#"
title: item master
$id: https://raw.githubusercontent.com/TW-ASMP/TWmaximoConfig/main/1-Schemas/A-entity_record_schema/05_item_master_schema.yml
type: object

properties:
  
  number:

    type: string
    description: 
      A read-only UUID, generated by the system, to uniquely identify the item.
    $comment: |
      UUID instead of a simple serial used with the consideration that we may in the future incorporate items defined outside of TW.
  
  #========================
  
  name:

    type: string
    description: The human readable short description of the item.
    
    rule_spec:
    
      - name: item master record naming
        form: long
        spec_ID: VkYgCtRPlx
        type: assertion
        specification: |
          if (item_x.properties.commodity_or_commercial_product) = "commodity", then  
            the value of item_x.properties.name would be the semi-colon delimited concatenation of the following property values:
              - properties.class.properties.name
              - every non-empty class dependent specification values
              - properties.supplementary_commodity_description
          elif: (item_x.properties.commodity_or_commercial_product = "commercial product"), then: 
            the value of item_x.properties.name would be the semi-colon delimited concatenation of the following property values:
              - properties.class.properties.name
              - properties.product manufacturer company.properties."company name"
              - properties.model_and_sub-model
              - properties.version_or_model_year
              - properties.product configuration code
        checked on: 2024-08-15
  
  #========================
  
  class:

    $ref: "../B-entity_class_object_schema/01_asset_item_tool_class.yml"
    $comment: is a value from the item classification, which is a superset of the asset class.

    rule_spec:
    
      - name: item classification list includes all classes
        spec_ID: EynXVZ-dxg
        specification: |
          Maximo item classification list would include all class instances of B-entity_class_object_schema/01_asset_item_tool_class_object_schema.yml, regardless of the values
            - properties.tool
            - properties.only used as a part asset
        status: specified
        checked_on: 2024-08-15


  class_dependent_specifications:

    type: object
    description: is a set of properties applicable to the class value. 

# INVENTORY MANAGEMENT FLAGS
  #========================

  stocked_at_TW:
    
    $ref: "./00_common_definitions.yml#/definitions/stocked_at_TW_def" 
          
  rotating:
    
    $ref: "./00_common_definitions.yml#/definitions/rotating_property_def" 
      
  #====================================
  # generic and specific definition
  #====================================

  commodity_or_commercial_product:
    
    type: string
    description: indicate whether the item master defines an unspecialized commodity or a specific commercial product.
    enum:
      - commodity
      - commercial product

  supplementary_commodity_description:
    
    type: string
    description: supplementary description, in addition to the class value and and class-dependent specification values, necessary to differentiate a commodity.
    
  #====================================
  # MANUFACTURER AND MODEL GROUP
  #====================================

  commercial_product:
    
    oneOf: 
      - type: null
      - $ref: "./00_common_definitions.yml#/definitions/manufacturer_and_model_def"
  
  commercial_product_description:

    oneOf: 
    - type: null
    - type: string
      $ref: "./00_common_definitions.yml#/definitions/plain-text_manufacturer_and_model_def"

  #========================
  
  instant_of_commodities:
    
    oneOf: 
      - type: null
      - $ref: "./05_item_master.yml"
    
    rule_spec:
      - description: range of the instant_of_commodities property must be  items whose TW_defined_commodity value is 'true'.
        form: short
        spec_ID: 01JF33GVB2DT7K5FJ3SA3P9EP4
  
  #========================
  
  same_item_as:
    
    oneOf: 
      - type: array
        items:
          $ref: "./04_item_master.yml"
      - type: null
    description: |
      Identifies the same commercial product item made by the same manufacturer, but differing only in item unit format. For example, the 208-litre drum item and the 5-litre bottle item of Penzoil 5W30 Synthetic Lubricant. 
    
    rule_spec:

      - name: Infer Symmetrical Equivalence between Product Items
        spec_ID: EJCnUukuex
        type: inference
        specification: ""
        status: []

      - name: Range must be a commercial product as well
        spec_ID: 01JF81079K178X9B4NSG23AA0Z
        type: validation
        specification: 
        status: []

  #========================
  
  ordering_information:

    oneOf:
      - type: array
        items:
          $ref: "#/definitions/vendor_order_detail"
      - type: null

  #========================

  issue_unit:

    type: string
    description: A description of each individual unit issued for work, such as a can or roll, of the product item, regardless of the ordering unit, such as a box of 24.  For example, "80 ml can" or "27 x 500in. roll".
    $comment: "To implementer: use the out of the box list from Maximo"

#========================
# LOCAL OBJECT DEFINITIONS
#========================

definitions:

  vendor_order_detail:

    properties:
      
      vendor:
        
        $ref: MaximoCompanyObject
      
      #========================
      
      order_unit:
        
        oneOf:
          - type: null
          - type: string
        description: A description of each individual unit of order, such as a can or roll, of the product item, regardless of the ordering unit, such as a box of 24.  For example, "80 ml can" or "27 x 500in. roll".
        $comment: |
          For a commercial product, if there are multiple item unit formats, one item should be create for each format.
          To Implementer,
            Use Maximo's defaults
      
      #========================
      
      vendor_item_number:
        
        oneOf:
          - type: string
          - type: null
      
      #========================
      
      unit_cost_in_CAD:
        
        type: number
        description: The expected cost of a unit of the item. (This should not be the cost of a package of multiple units of the item.) 
        $comment: To TW, in the future, this field should contain a running average of the recent purchase costs, possibly also adjusted for recent inflation.


  # 6/25: [] we need to add another field for lead time. This will contribute to the dynamic calculation of criticality among other uses. 