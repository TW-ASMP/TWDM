---
$schema: "http://json-schema.org/draft-07/schema#"
$id: https://raw.githubusercontent.com/TW-ASMP/TWDM/main/1-Schemas/A-entity_record_schema/05_item_master_schema.yml
type: object

properties:
  
  ID:
    description: A read-only ID, generated by the system, to uniquely identify the item.
    type: string
    implementer_note: |
      Use UUID instead of a serial - this allow us to incorporate future items defined outside of TW.
  
  description:
    description: A human readable short description of the item.
    type: string
    RULE_SPEC:
      - name: item master record naming
        spec_ID: VkYgCtRPlx
        type: [automation]
        specification: |
          if item1.commodity_or_commercial_product = "commodity"
            item1.name = semi-colon delimited concatenation of(
              - item1.class.name
              - item1.generic_commodity_description
            )
          elif item1.commodity_or_commercial_product = "commercial product" 
            item1.properties.name  = semi-colon delimited concatenation of (
              - item1.class.name
              - "make: " + item1.make_and_model_def.product_make
              - "model: " + item1.make_and_model_def.product_model
              - "version: " + item1.make_and_model_def.product_version_or_model_year)       
  
  class:
    description: Class of the item.
    $ref: "../B-entity_class_object_schema/01_physical_entity_and_functional_location_class.yml"
    
  rotating:
    description: Signifies that all instances of this item are tracked as serialized assets.
    $ref: "./00_re-used_object_property_definitions.yml#/definitions/rotating_property_def" 

  bulk_material:
    description: Indicates that the item is a material item, which are handled or apportioned in continuous quantities.
    type: boolean

# GENERIC COMMODITY AND COMMERCIAL PRODUCT DEFINITION

  commodity_or_commercial_product:
    description: Indicate whether the item master defines an generic commodity or a specific product of a certain manufacturer.
    type: string
    enum:
      - commodity
      - commercial product
    RULE_SPEC:
      - name: a commercial product item record must have manufacturer's information
        spec_ID: EkYKhixcGg
        type: [validation] 
        specification: |
          If item1.commodity_or_commercial_product = "commercial product"
            - item1.make_and_model_def.product_make is not null
            - item1.make_and_model_def.product_model is not null
      
      - name: a commercial product item record must not have a generic commodity description
        spec_ID: NJsfoIZ5Me
        type: [UI_options_constraint, validation]
        specification: |
          If item1.commodity_or_commercial_product = "commercial product"
            - item1.generic_commodity_description is null
      
      - name: a commodity item must have a generic commodity description
        spec_ID: 417piUb5ze
        type: [validation]
        specification: |
          If item1.commodity_or_commercial_product = "commodity"
            - item1.generic_commodity_description is not null

      - name: a commodity item cannot have manufacturer's information
        spec_ID: EJftoUZqGg
        type: [UI_options_constraint, validation]
        specification: |
          If item1.commodity_or_commercial_product = "commodity"
            - item1.make_and_model_def.product_make is null
            - item1.make_and_model_def.product_model is null


# GENERIC COMMODITY DESCRIPTION
  
  generic_commodity_description:
    description: Supplementary description, in addition to the class value and class-dependent specification values, necessary to differentiate a commodity.
    type: string
    $comment: Toronto Water is not using the UNSPSC or any other commodity taxonomy code for item identification, as Toronto Water's classification system plays that role.

# COMMERCIAL PRODUCT DESCRIPTION

  make_and_model_def:
    $ref: "./00_re-used_object_property_definitions.yml/definitions/make_and_model_def"

# OTHER ITEMS DESCRIPTIONS

  order_unit:
    description: Describes the ordering format e.g., "can", "drum", "12-pack".
    type: string

  issue_unit:
    description: Describes how the quantity of the item is tracked and measured when it is issued out, such as "feet", "kg", "sheet", or "can".
    type: string
    RULE_SPEC:
      - name: Unit of issue for assets and parts (non-material items)
        spec_ID: 01JK1VER5T6HK314XPB4W5T27V
        type: constraint_or_validation
        form: short
        description: if the item is not an material item, its unit of issue would be "individual item"
      - name: Default value of  unit_of_issue
        spec_ID: 01JK7AM2RA8S8EPAH57W33SJ79
        type: automation
        form: short
        description: When an item record is created, the default unit of issue is the same as the item format. 

  conversion:
    description: indicates how many units of issue are in each order unit.
    type: number
    RULE_SPEC:
      - name: Default quantity in units
        spec_ID: 01JK7AFSHFQ2W8G5JD3B9XSWBV
        type: automation
        form: short
        description: When an item record is created, the default value of quantity_in_units_of_issue is 1. 
  
  ordering_options:
    description: presents a list of vendors and available order formats
    oneOf:
      - type: null
      - type: array
        items:
          properties:
            
            vendor:
              $ref: MaximoCompanyObject
            
            vendor_item_number:
              oneOf:
                - type: string
                - type: null

# DEFINED CLASS OR CATEGORY

  defined_class_or_category:
    $ref: "./00_re-used_object_property_definitions.yml/definitions/defined_class_or_category_def"

# COMMON RECORD PROPERTIES

  duplicate_record_of:
    $ref: "./00_re-used_object_property_definitions.yml#/definitions/duplicate_record_def"

  record_retirement_information:
    $ref: "./00_re-used_object_property_definitions.yml#/definitions/record_retirement_def"