---
$schema: "http://json-schema.org/draft-07/schema#"
title: asset
$id: https://raw.githubusercontent.com/TW-ASMP/TWDM/main/1-Schemas/A-entity_record_schema/01_asset.yml
type: object

$comment: >

properties:

  ID:
    type: string
    description: A read-only UUID, generated by the system, to uniquely identify the asset record.

  name:
    type: string 
    description: The human readable short description of the asset.
    $comment: |
        Assumption: an non-is a specific commercial product is always built on site for a specific purpose, and would permanently occupy a role. An example is an aeration tank. 
        
  class:
    $ref: "../B-entity_class_object_schema/01_asset_item_tool_class.yml"
    description: indicates the class to which this asset is an instance.
      
  GIS_object_ID:
    type: string
    integration: GIS
    description: is unique ID of the GIS asset record, which represents the same asset as this record. 
  
  specification_data:
    type: object
    description: is a set of specification property data. (The applicable properties are dependent on the definition made in the chosen class.)

  inferred_classes:
    oneOf: 
      - type: null
      - type: array
        items:
          $ref: "../B-entity_class_object_schema/01_asset_item_tool_class.yml"
    read-only: true
    integration: data-hub
    description: indicates the complex classes to which this asset is an instance. A complex class is defined with reference to a primitive class plus other attributes. An example of a complex class is the TSSA high-pressure boiler class, which is made with reference to th primitive class boiler. 

# STATE AND STATUS GROUP OF PROPERTIES

  physical_status:
    type: string
    description: Indicates whether the asset is present at the City, and more precisely, at its working location. It also indicates when the knowledge of the asset's presence is missing (i.e., it is missing or lost).
    enum:
      - planned
      - in possession
      - installed
      - abandoned in place
      - removed from possession
      - missing 
      - lost
    $comment: |
      This data field is not nullable because the lack of knowledge is explicitly expressed as "missing" or "lost", and the non-existence is expressed as "planned" or "removed from possession".

  operating_state:
    type: string
    description: Indicates whether the asset is available for doing the work that it is assigned at a given moment. Only applies to asset that is assigned to a role, user-group, or user.
    enum:
      - available (up) 
      - unavailable (down)  
      - not applicable
    $comment: |
      To data architect and implementer: the "not applicable" value is important, because when we are reporting on equipment uptime, we need to know about the periods in which the operating state is not applicable. For example, if the asset is not assigned to any role, org-chart_group, or anyone.

# OWNER, OPERATOR, MAINTAINER GROUP

  owned_by_the_group:
    oneOf: 
      - type: null
      - $ref: "./04_org-chart_group.yml"
    description: Denotes the org-chart_group that owns the asset.
    integration: GIS

  owned_by_the_unlisted_group:
    oneOf:
    - type: null
    - type: string
    description: name of an org-chart group that is not found in the current list (and should be added)
    integration: GIS
    $comment: |
      To WIM, this data field should be added to the GIS to allow an asset record to be enter into the system, even if the org-chart_group that owns it had not been added to the value list.
  
  maintenance_group:
    oneOf: 
      - type: null
      - $ref: "./04_org-chart_group.yml"
    description: group responsible for the overall maintenance of the asset - for example, a unit, work area, or crew.

  operator_group:
    oneOf:
      - type: null 
      - $ref: "./04_org-chart_group.yml"
    description: group responsible for the operation of the asset
 
# ASSIGNMENTS

  assignment_type:
    oneOf: 
      - type: string
      - type: null
    description:
    enum:
      - to a role
      - to a user group
      - to a single user
      - not assigned
    $comment: |
      This property is added to assist with the interpretation of the null value in the "assigned_to_asset_role", "assigned_to_tool_user_group", or "assigned_to_tool_user_group" property. If the value here is "not assigned", then we know the asset is not assigned to anything. If the value here is null, we do not know whether this asset is assigned to anything. 

  assigned_to_asset_role:

    oneOf: 
      - $ref: "./02_role.yml"
      - type: null
    description: Role that the asset is designated to play. This value persists even if the asset is temporarily removed from the location of the role (for reasons such as repair).

  assigned_to_tool_user_group:
    oneOf: 
      - $ref: "./04_org-chart_group.yml"
      - type: null
    description: A group of people, such as a facility, work area, or crew to whom the asset is assigned for use. Indicates the assignment of an asset (usually a tool) that does not have a system role.
  
  assigned_to_tool_user:
    oneOf: 
      - $ref: "./08_person.yml" 
      - type: null
    description: Indicates the assignment of an asset (usually a tool) that does not have a system role.

# LOCATION

  installation_or_parking_location:
    oneOf:
      - $ref: "./03_space.yml"
      - type: null

  service_address_or_coordinate: 
    oneOf:
      - $ref: MaximoServiceAddressObject
      - type: null
    $comment: |
      this is referencing Maximo's native service address object 

  parent_asset:
    oneOf: 
      - $ref: "./01_asset.yml"
      - type: null
    description: >
      Indicates the larger discrete asset or defined collection of assets, to which this asset is a part of.  NOTE: this property is not meant to be used for specifying the system hierarchy parent. That property is found on the role record, not the asset record.
    $comment: |
      This field is commonly used when the asset is a part of a skid, structural tank, or switchgear cabinet, in which the asset parent in the system hierarchy should be the line entity. As such we will using this field to track that the asset is also a part of a physical assembly. We would also be using this field to capture a serialized rotating component as a part of another discrete asset. This field can also be used to indicate an asset membership in a Defined Collection of Assets. 

# PRODUCT AND TOOL ASSOCIATION GROUP
  
  is_a_commercially_available_product:
    type: boolean
    description: An asset is made under as a product of a commercial entity, as opposed to an asset that is assembled on site.
    $comment: No null value allowed because this information is self-evident

  is_a_tool:
    type: boolean
    description: a tool is enables or enhances the ability of a human agent to perform a piece of maintenance, repair, testing, and investigative work. "true" value would designate the asset as a rotating tool, which allows the asset to be 1. reserved for work, or 2. assigned to a staff or group (which includes fixed tools).
    $comment: Note that this property was changed from "mobile" because this designation also applies to fixed tools, such as machine shop or lab tools. All of these assets fall within the definition of a tool.

  is_mobile:
    oneOf: 
      - type: boolean
      - type: null

  item_product_master_record:
    oneOf: 
      - $ref: "./05_item_master.yml"
      - type: null
    description: This field links the asset to an item record that defines a specific commercial product. By effect, it also deems to asset to be a rotating item.

  tool_product_master_record:
    oneOf: 
      - $ref: "./06_tool_master.yml"
      - type: null
    description: A association with a master record designates the asset as a stocked tool, which allows the tool to be checked into a storeroom and tracked as a part of an inventory. Without an association, the tool would be non-stocked. 

# MANUFACTURER AND MODEL

  commercial_product_information:
    oneOf:
      - type: null
      - $ref:"./00_common_definitions.yml#/definitions/plain-text_manufacturer_and_model_def"
  
# DATE PROPERTIES
  
  construction_contract_number:
    oneOf: 
      - type: string
      - type: null
    description: The construction_contract_number (usually RFQ#) assigned by the City

  first_day_of_City_operation:
    oneOf: 
      - type: string
      - type: null
    description: The day that the asset is turned over to the City from a contractor, or if the City installed the asset itself - the day the asset enters operation after testing is completed.
    $comment: |
      This usually coincides with "warranty start date".  However, if the asset is not delivered through a project, "warranty start date" may be empty. 
  
  OEM_serial:
    oneOf: 
      - type: string
      - type: null
    description: The serial number, affixed on the asset, designated by the manufacturer.
    $comment: |
      ASMP Discussion Log: The serial number is only populated when an asset experiences a movement (except for movement for removal), or when it is being check into a storeroom. Therefore, when the value of the OEM_serial is null, it represents the fact that we do not know what the serial number is (and whether it has a serial number at all).
  
  purchase_cost_in_CAD:
    description: the original purchase cost of the asset (not necessary if the asset is associated with a item master record)
    oneOf: 
      - type: number
      - type: null
  
  asset_photos:
    oneOf: 
      - type: array
        items:
          oneOf:
            - type: null
            - type: array
              items:
                $ref: "./00_common_definitions.yml/attachment_def"
      - type: null

# RECORD PROPERTIES

  duplicate_record_of:
    $ref: "./00_common_definitions.yml#/definitions/duplicate_record_def"
  
  record_retirement_information:
    $ref: "./00_common_definitions.yml#/definitions/record_retirement_def"
      
# BACKGROUND PROPERTIES POPULATED AUTOMATICALLY

  TW_asset_group:
    oneOf:
      - type: string
      - type: null
    invisible: true
    read-only: true
    enum:
      - Drinking Water Network
      - Drinking Water Treatment Plants
      - Waste and Storm Water Network
      - Wastewater Treatment Plants
      - Independent Building
      - Multiple Major Systems
    $comment: |
      Note that this property is populated automatically, and not available for user to edit. Use-case: asset from the GIS will not be indexed on the hierarchy. The main use of this property is to provide a simple handle term, when one needs to summarize the collection of all assets imported from a certain layer(s) the GIS.

#############################################################
# RULES
#############################################################

rule_spec:

  - name: Vertical Asset ID
    spec_ID: 41JeoQuvex
    involves_prop: [ID]
    type: [assertion]
    specification: |
      Upon the creation of a new vertical facility asset record generate a unique ID (such as UUID Ver4)
    checked_on: 2024-08-15
    $comment: |
      UUID has a distinct advantage over a simple serial number - we do not need a script to check for repetition. For instance, when onboarding assets from another system or a spreadsheet, we don't need to check the WMS to see if the ID was already taken.

  - name: Asset Naming
    spec_ID: 4ykh0m_Dle
    involves_prop: [name]
    type: [assertion]
    specification: | 
      if asset_x.properties."is_a_commercially_available_product" = TRUE 
        asset_x.properties.name is the semi-colon delimited concatenation of:
          - asset_x.properties.class.properties."class name"
          - asset_x.properties."item_product_master_record".properties.product manufacturer company 
          - asset_x.properties."item_product_master_record".properties.model_and_sub-model
          - asset_x.properties."item_product_master_record".properties.product configuration code
          - asset_x.properties."OEM_serial"
      elif asset_x.properties."is_a_commercially_available_product" = FALSE
        asset_x.properties.name is the semi-colon delimited concatenation of:
          - asset_x.properties.class.properties."class name"
          - asset_x.properties."assigned_to_asset_role".properties.name
      # NOTE: actual script should contain additional condition handle formatting of the name text when there is missing data in any concatenated property.
    status: 
      checked: 2024-08-15 

  - name: Exclusion Of Part And Material Classes From Asset Classification 
    involves_prop: [class]
    spec_ID: V15NNHZuxl
    type: [validation, UI]
    specification: |
      Assertion Part:
        For all assets "asset_x",
          the value of (asset_x.class.properties.only used as a part asset) must be FALSE
      UI Part:
        In all asset classification search or selection screens, eliminate or filter out all classes "class_y",
          where (class_y.properties.only used as a part asset) is TRUE
    checked_on: 2024-08-15

  - name: Valid Values of owned_by_the_group Property
    involves_prop: [owned_by_the_group]
    spec_ID: 410N2dr_xx
    type: [validation,UI]
    specification: |
      - The valid range of values for selection includes the first or second of the org-chart group hierarchy, specified in the (/TWDM/3-System_Hierarchies/04_org_hierarchy.md) . For examples,
        - first level example: York Region, 
        - second level example: Toronto Water
      - The UI must only present the valid range of values to the users for selection, and the valid range of values must be presented as a hierarchy.
    checked_on: 2024-08-19

  - name: Inheriting The Asset's Maintenance And Operator Group Values From Its Role
    involves_prop: [operator_group, maintenance_group]
    spec_ID: VJ1QRgIclg
    specification: |
      - if the value of asset_x.properties.assigned_to_asset_role is role_y, then  
          inherit the value of 
            - asset_x.properties.maintenance_group
            - asset_x.properties.operator_group
          from the same properties of role_y
    checked_on: 2024-08-20

  - name: Rendering of assignment_type Data Field.
    involves_prop: [assignment_type]
    spec_ID: 4yARRuvOex
    type: [UI]
    description: |
      the options of this property should be presented as radial button
    status: specified

  - name: Valid Assignment of an Asset
    spec_ID: NyrzGKwuel
    type: [validation, assertion, UI]
    description: |
      If asset_x.properties."assignment_type" = "to a role", then 
        - asset_x.properties."assigned_to_asset_role" must NOT = null;
        - asset_x.properties."assigned_to_tool_user" must = null
        - asset_x.properties."assigned_to_tool_user_group" must = null
      elif .properties."assignment_type" = "to a user group", then
        - asset_x.properties."assigned_to_tool_user_group" must NOT = null;
        - asset_x.properties."assigned_to_asset_role" must = null
        - asset_x.properties."assigned_to_tool_user" must = null          
      elif asset_x.properties."assignment_type" = "to a single user", then
        - asset_x.properties."assigned_to_tool_user" must NOT = null;
        - asset_x.properties."assigned_to_asset_role" must = null
        - asset_x.properties."assigned_to_tool_user_group" must = null
      elif asset_x.properties."assignment_type" = null, then
        - asset_x.properties."assigned_to_asset_role" must = null
        - asset_x.properties."assigned_to_tool_user" must = null
        - asset_x.properties."assigned_to_tool_user_group" must = null
      Also, in the UI screen, disable the properties that should = null
    status: specified

  - name: asset present at site must have location information on record
    involves_prop: [service_address_or_coordinate]
    spec_ID: 01J5R2F9ARJDM3RMGE9WYZWVFE
    type: [validation]
    specification: |
      if the value of asset_x.properties.physical_status is either 
        - "in possession", or
        - "installed"
      then at least one of the following properties must NOT be null
        - asset_x.properties.installation_or_parking_location
        - asset_x.properties.service_address_or_coordinate
    check_on: 2024-08-20

  - name: Automatic Value Assignment to properties."is_a_commercially_available_product"
    involves_prop: [is_a_commercially_available_product]
    spec_ID: 4Jg2gYSOee
    type: [assertion]
    specification: |
      - Upon record creation, set the value to TRUE.
      - Upon a asset_x.properties.class value change or a re-run of the Maximo rule processor,  
          if asset_x.properties.class.properties."non-manufactured" = TRUE;
            set the value to TRUE;
          else set the value to FALSE.  
    status: [specified]

  - name: Default Value of is_a_tool
    involves_prop: [is_a_tool]
    spec_ID: 41sz7KSdxe
    type: [assertion]
    specification: |
      - Upon record creation, set the default value to FALSE.          
      - Upon a asset_x.properties.class value change or a re-run of the Maximo rule processor,  
          if asset_x.properties.class.properties.tool = TRUE;
            then set the value to TRUE;        
    status: [specified, checked]

  # - name: If an asset is commercially available but not a tool, then it must have mfr and model information.
  #   spec_ID: VJY43yI9lx
  #   involves_prop: item_product_master_record
  #   type: [assertion, UI]
  #   specification: |
  #     if asset_x.properties.is_a_commercially_available_product = TRUE AND asset_x.properties.is_a_tool = FALSE, then
  #       - (asset_x.properties."item_product_master_record") is NOT null
  #       - enable (asset_x.properties."item_product_master_record") in UI
  #     else
  #       - (asset_x.properties."item_product_master_record") is null
  #       - disable (asset_x.properties."item_product_master_record") in UI
  #   status: TBS

  - name: valid item master record in .properties.item_product_master_record
    spec_ID: VJGKn1I9ex
    involves_prop: [item_product_master_record]
    type: [validation]
    specification: |
      For asset_x.properties.item_product_master_record, 
        only accept a master record whose value of asset_x.properties.generic_or_specific_product is "specific commercial product". 
    status: [specified, checked]
    $comment: related to 4y3dRfLcee

  - name: Serial on Mobile Assets
    involves_prop: [is_mobile]
    spec_ID: EyA3sYa9le
    type: [validation]
    specification: |
      For any asset_x,
        if the value of asset_x.properties.is_a_tool is TRUE, and the value of asset_x.properties.is_mobile is also TRUE, then
          the value of asset_x.properties.OEM_serial cannot be null. 
    check_on: 2024-08-20

  - name: when to enable the tool_product_master_record
    involves_prop: [tool_product_master_record]
    spec_ID: NyQBbeL9xl
    specification: |
      if asset_x.properties."is_a_tool" = TRUE
        then enable (asset_x.properties."tool_product_master_record") property.      
    status: [specified, checked]
  - name: valid value of asset_x.properties.tool_product_master_record
    spec_ID: NyFFWlUcll
    type: [validation]
    specification: |
      only accept a tool_product_master_record whose .properties.generic_or_specific_product property value is "specific commercial product"   
    checked_on: 2024-08-20

  - name: an asset may either be associated with a tool or an asset, not both
    involves_prop: [tool_product_master_record]
    spec_ID: 
    type: 
    specification:
    status: TBS

  - name: Linear Asset Id
    type: [assertion]
    spec_ID: Vku-67dDxx
    involves_prop: [ID]
    specification: |
      Upon the creation of a new asset record corresponding to a record in TWAG, through the Maximo-TWAG integration, 
        populate the TWAG_asset record's "Facility ID" value into the "ID".
    checked_on: 2024-08-15
    $comment: see comment for rule 41JeoQuvex.

  - name: Asset must have a start of operation date info before we can indicate that it is operationally available.
    spec_ID: NyG2nzL5xg
    type: [validation]
    specification: |
      if both of the following properties are null
          - (asset_x.properties."first date of City operation")
          - (asset_x.properties."warranty start date")
        then the value of (asset_x.properties."operating_state") CANNOT be "available (up)"

  - name: asset can be assigned exclusively to either a role, user, or user group
    spec_ID: EkD-ZmIceg
    type: [validation]
    specification: | 
      only one of the following properties can have value (i.e., not null) at any given time. (It is also okay for all of them to be null) 
          - asset_x.properties."assigned_to_asset_role"
          - asset_x.properties."assigned_to_tool_user"
          - asset_x.properties."assigned_to_tool_user_group"


  - name: Consistency Between Operating State And Assignment Values
    spec_ID: 41OFxr8ceg
    type: [validation, assertion]
    specification: | 
      if an asset does not have a value in any of the following properties (i.e., all nulls), 
          - asset_x.properties."assigned_to_asset_role"
          - asset_x.properties."assigned_to_tool_user"
          - asset_x.properties."assigned_to_tool_user_group"           
        then the value of (asset_x.properties."operating_state") must be "not assigned work". The opposite must also be true.
    errorMessage: "An asset NOT assigned to a role, user, or user group should not be operating and therefore would not have an operating_state"

  - name: Consistency Between Asset's Physical Status, Operating State, And Assignments
    spec_ID: NyG2nzL5xg
    type: [assertion, validation]
    specification: |
      If the value of (asset_x.properties."physical_status") is NEITHER of the following
          - "installed"
          - "in possession"  
        then the following properties would take on the stated values
          asset_x.properties."operating_state" = "not applicable"
          asset_x.properties."assigned_to_asset_role" = null
          asset_x.properties."assigned_to_tool_user" = null
          asset_x.properties."assigned_to_tool_user_group" = null

  - name: Asset Can Only Be Assigned To A Discrete Asset Role
    spec_ID: 4yBXuH8qle
    type: [validation]
    specification: |
      if (asset_x.properties."assigned_to_asset_role") is NOT null
          then (asset_x.properties."assigned_to_asset_role".properties.class.properties."discrete asset role") = TRUE
    errorMessage: an asset can only be assigned to a discrete asset role

  - name: inheriting the asset location information from its role
    spec_ID: NJdGTHLqeg
    type: [assertion]
    specification: |
        For an asset, asset_x, if 
          all of the following are true:
            - asset_x.properties."operating_state" = "installed"
            - asset_x.properties."assigned_to_asset_role" is NOT null
          and one of the following is true
            - asset_x.properties."assigned_to_asset_role".properties."asset_installation_location" is NOT null
            - asset_x.properties."assigned_to_asset_role".properties."service_address_or_coordinate" is NOT null
        then
            (asset_x.properties."installation_or_parking_location") would be set to the value of 
              (asset_x.properties."assigned_to_asset_role".properties."asset_installation_location")
            (asset_x.properties."service_address_or_coordinate") would be set to the value of 
              (asset_x.properties."assigned_to_asset_role".properties."service_address_or_coordinate")
  
  - name: over-write of manufacturer and model information
    spec_ID: 01J5RPPEKJCP11NBRW3A4XCKF7
    specification: |
      if the value of either
    status: TBS

  - name: a commercially available asset must be associated with manufacturer and model information
    spec_ID: 4y3dRfLcee
    type: [validation]
    exempt_grandfather: true 
    specification: |
      if the value of asset_x.properties.is_a_commercially_available_product is TRUE
        then NONE of the following properties can be null
          - asset_x.properties.item_product_master_record
          - asset_x.properties.manufacturer_name
          - asset_x.properties.product_model_information

