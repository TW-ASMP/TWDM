---
$schema: "http://json-schema.org/draft-07/schema#"
title: asset
$id: https://raw.githubusercontent.com/TW-ASMP/TWDM/main/1-Schemas/A-entity_record_schema/01_asset.yml
type: object


$comment: |
  - TW, the datafield "feature_class" is removed from P3 design, as 1) it is not applicable in most cases 2) the information will be repetitive of the classification value.

#===============================================================================
TO_DO: |
  - vertical's default search will be functional location, but vertical will be assets
  - DM: there is also a long description available to the asset name. Do we lock it down? TH[] to bring up this question on Friday
  - 
#===============================================================================

properties:

  ID:
    description: A read-only unique asset ID, generated by Maximo, to uniquely identify the asset record.
    type: string
    integration: [GIS]
    dev_note:
      P3_MVP: true
      P1_label: Asset
      DB: ASSET.ASSETNUM
      remark: |
        - For assets coming from TWAG - Toronto Water's GIS system - the ID value would come from TWAG through the integration.
          - Depending on the asset class, the TWAG ID coming over would either be the facility_ID or the asset_num.
    RULE_SPEC:
      - name: ID for formatting of assets from TWAG 
        spec_ID: 
        type: [automation]
        specification:
          In pseudo-code:
            If an asset_x came from TWAG, then its "ID" value starts with the text "TWAG-", and then followed by the TWAG ID.
        status: TO_DO - reviewed with Silvia

  description:
    description: A short description of the asset
    type: string
    RULE_SPEC:
      - name: asset naming
        spec_ID: 4ykh0m_Dle
        type: [automatic_assertion]
        specification: | 
          pseudo-code:
            if is_a_commercially_available_product = TRUE 
              asset_x.properties.long_description is the semi-colon delimited concatenation of:
                - asset_x.properties.class.properties.name
                - asset_x.properties.product_item_master_record.properties.product manufacturer company 
                - asset_x.properties.product_item_master_record.properties.model_and_sub-model
                - asset_x.properties.product_item_master_record.properties.product configuration code
                - asset_x.properties.serial_number
            else # asset_x.properties."is_a_commercially_available_product" = FALSE
              asset_x.properties.long_description is the semi-colon delimited concatenation of:
                - asset_x.properties.class.properties."class name"
                - asset_x.properties."assigned_to_functional_location".properties.long_description
            # Note that the actual script should contain additional condition handle to handle null values, which should be a space.
        status: TO DO - product make and model information must be revised
    dev_note:
      P3_MVP: true
      P1_label: Name 
      DB: ASSET.DESCRIPTION+LONG

  parent_asset:
    oneOf: 
      - $ref: "./01_asset.yml"
      - type: null
    description: Indicates the larger asset or the defined collection of assets, to which this asset is a part of.
    dev_note:
      P3_MVP: true
  
  serial_number:
    oneOf: 
      - type: string
      - type: null
    description: The number that uniquely identifies the individual asset, affixed on the asset, either designated by the manufacturer or Toronto Water.
    RULE_SPEC:
      - name: asset serial number is required for tools
        spec_ID: E1cF6kMwGx
        type: [constraint_or_validation]
        specification: |
          In pseudo-code:
            Given an asset named asset_x,
            (asset_x.assigned_to_tool_user is not NULL) && (asset_x.assigned_to_tool_user_group is not NULL) =>
              asset_x.properties.serial_number != NULL
        status: check 
    $comment: |
      To TW, 
        - the serial number only needs be populated when an asset experiences a movement (except for movement for removal), or when it is being check into a storeroom. Therefore, when the value of the serial_number is null, it represents the fact that we do not know what the serial number is.
  
  class:
    description: Indicates how the asset is classified
    $ref: "../B-entity_class_object_schema/01_asset_item_tool_class.yml"
    RULE_SPEC:
      - name: hide part and material classes when classifying assets 
        spec_ID: V15NNHZuxl
        type: [constraint_or_validation, UI_element_behaviour]
        specification: |
          Re automatic_assertion:
            For all assets "asset_x",
              the value of (asset_x.class.properties.only_used_as_a_part asset) must be FALSE
          Re UI:
            In all asset classification search or selection screens, eliminate or filter out all classes "class_y",
              where (class_y.properties.only_used_as_a_part_asset) is TRUE
        checked_on: 2024-08-15
    dev_note:
      P3_MVP: true
      P1_label:
      DB:

  defined_class_or_category:
    description: Indicates the more specific logically defined classes or more general category to which this asset is an instance. 
    oneOf: 
      - type: null
      - type: array
        items:
          type: object
          properties:
            class:
              description: Indicates the defined class or category (represented as a class object)
              $ref: "../B-entity_class_object_schema/01_asset_item_tool_class.yml"
            automatically_inferred:
              description: Indicates whether the present value of defined class or category is inferred automatically by a rule.
              type: boolean
          RULE_SPEC:
            - name: Valid classes for Defined Class or Category
              spec_ID: VJke7GMPfl
              type: [constraint_or_validation]
              specification:
                class_x is referenced by an asset (or another object such as functional location) as its defined class =>
                 class_x.properties.defined_class_or_category = TRUE
    dev_note:
      P3_MVP: true
      P1_label: null
      DB: 
      remarks: |
        ASMP, the current Avantis categories, with exception of the one called  component/cat., will be mapped to this field.  

# PRODUCT AND TOOL ASSOCIATION GROUP

  is_mobile: 
    type: boolean
    description: Indicate the the asset, when in service, has no fixed installation location
    RULE_SPEC:
      - name: default value of asset's is_mobile property
        spec_ID: 01K1C6PR4KXHCACMCCFWZCF4MZ
        type: [automation]
        specification: default value of is_mobile is FALSE
    dev_note:
      P3_MVP: true 
      P1_label: 
      DB:
  
  is_a_commercially_available_product:
    type: boolean
    description: An asset is made as a product of a commercial entity, as opposed to an entirely custom asset that is assembled on site.
    RULE_SPEC:
      - name: default value is_a_commercial_product property
        spec_ID: 01K1C6W9AFVZW7VHNSV8EAF6Y9
        type: [automation, constraint_or_validation]
        specification: default value of is_a_commercial_product property is TRUE
      - name: synchronize commercial product information to the item catalog record
        spec_ID: 01K1E7ZC308F8PZBS145A8QJAF
        type: [automation] 
        specification: |
          in pseudo-code:
          if
            asset_x.item_catalog_record is NOT null AND
            asset_x.item_catalog_record.commodity_or_commercial_product = "commercial product"
            then
               asset_x.is_a_commercially_available_product = TRUE
               asset_x.manufacturer_company_name = asset_x.item_catalog_record.manufacturer_company_name 
               asset_x.make_and_model = asset_x.item_catalog_record.make_and_model
               asset_x.product_version_or_model_year = asset_x.item_catalog_record.product_version_or_model_year
    $comment: No null value allowed because this information is self-evident
    dev_note: 
      P3_MVP: true
      P1_label: 
      DB: 

  item_catalog_record:
    oneOf: 
      - $ref: "./05_item_master.yml"
      - type: null
    description: This field links the asset to an item record, indicating that the asset is an rotating/serialized asset
    dev_note:
      P3_MVP: true
      P1_label: 
      DB:
      remark: 

  tool_catalog_record:
    oneOf: 
      - $ref: "./06_tool_master.yml"
      - type: null
    description: This field links the asset to a defined tool record, indicating that the asset is an serialized tool.
    RULE_SPEC:
      - name: an asset may either be associated with a tool or an asset, not both
        spec_ID: 
        type: 
        specification: Description in name suffices as specification.
    dev_note:
      P3_MVP: true
      P1_label: 
      DB:

# MANUFACTURER AND MODEL

  manufacturer_company_name:
    oneOf:
    - type: null
    - type: string
    description: The commercial entity that has manufactured the product or for whom the product was manufacturer.

  make_and_model:
    oneOf:
    - type: null
    - type: string
    description: The complete brand, model, and sub-model description. For example, "GE Multilin 869"
    dev_note: 
      P3_MVP: true 
      P1_label: 
      DB: 

  product_version_or_model_year:
    oneOf:
    - type: null
    - type: string
    description: Identifies the specific version of the product model. For example "v2" or "2023".
    dev_note: 
      P3_MVP: true 
      P1_label: 
      DB: 

# COMMISSION ASSIGNMENTS

  assigned_to_functional_location:
    oneOf:
      - $ref: "./02_functional-location.yml"
      - type: null
    description: The functional-location that the asset is designated to serve. 
    $comment: |
      This value persists even if the asset is temporarily removed from the physical location associated with its functional-location (for reasons such as repair).
    RULE_SPEC:
      - name: an asset can only be assigned to a discrete asset functional-location
        spec_ID: 4yBXuH8qle
        type: [constraint_or_validation]
        specification: |
          asset_x.properties.assigned_to_functional_location is NOT null -> 
              asset_x.properties.assigned_to_functional_location.properties.class.properties.functional_location_type = "discrete asset functional location"
    dev_note:
      P3_MVP: true
      P1_label: 
      DB:
  
  assigned_to_tool_user:
    read-only: true
    oneOf: 
      - $ref: "./08_person.yml"
      - type: null
    description: Indicates the issuance of a asset to a specific person as a tool.
    dev_note:
      P3_MVP: true

  assigned_to_tool_user_group:
    oneOf: 
      - $ref: "./04_org-chart_group.yml"
      - type: null
    description: A group of people, such as a facility, work area, or crew to whom the asset is assigned for use as a tool.
    RULE_SPEC:
      - name: Asset can be assigned exclusively to either a functional-location, user, or user group
        spec_ID: 01K1EN8TXWX3AEHRNYBACSXDEX
        type: [constraint_or_validation]
        specification: | 
          only one of the following properties can have value (i.e., not null) at any given time. (It is also okay for all of them to be null) 
              - asset_x.properties."assigned_to_functional_location"
              - asset_x.properties."assigned_to_tool_user"
              - asset_x.properties."assigned_to_tool_user_group"
    dev_note:
      P3_MVP: true

# STATE AND STATUS GROUP OF PROPERTIES

  status:
    type: string
    description: Indicates whether the asset is present at the City and if it is in service. It also indicates if the asset is missing.
    enum:
      - planned
      - in possession
      - in service
      - abandoned in place
      - removed from possession
      - missing
    $comment: |
      - TW, This data field is not nullable because the lack of knowledge is explicitly expressed as "missing" or "lost", and the non-existence is expressed as "planned" or "removed from possession".
      - TW, It is possible for an asset can be assigned (or designated) to a person, group, or functional location before it is "in commission".
    dev_note:
      P3_MVP: true
      P1_label: status
      DB: ASSET.STATUS
      remark: |
        The following specifies mapping to Maximo's statuses.
        - planned -> Not Ready
        - in possession -> Not Ready
        - in service -> Operating
        - abandoned in place -> Decommissioned
        - removed from possession -> Decommissioned
        - missing -> Missing

  up_and_available:
    type: Boolean
    description: Indicates whether the asset is available for doing the work that it is assigned at a given moment.
    $comment: |
      - Though we are using the property named ASSET.ISRUNNING, the data will indicate "availability" in the context of reliability engineering.
      - The value in this field is meaningless when the asset's status <> "in service".
    RULE_SPEC:
      - name: Consistency between asset's status, operating state, and assignment
        spec_ID: NyG2nzL5xg
        type: [constraint_or_validation]
        specification: |
          In pseudo-code:
            If NOT(OR(
                - asset_x.properties.status !="installed"
                - asset_x.properties.status != "in possession"  
              ))
              then the following properties must take on the stated values
                asset_x.properties."assigned_to_functional_location" is null
                asset_x.properties."assigned_to_tool_user" is null
                asset_x.properties."assigned_to_tool_user_group" is null
                asset_x.properties."up_and_available" = FALSE
    dev_note:
      P3_MVP: true
      P1_label: Asset Up?
      DB: ASSET.ISRUNNING

# OWNER, OPERATOR, MAINTAINER GROUP

  operations_unit:
    oneOf:
      - type: null 
      - $ref: "./04_org-chart_group.yml"
  
  operated_by:
    oneOf:
      - type: null 
      - $ref: "./04_org-chart_group.yml"
    description: A group responsible for the operation of the asset.
    integration: [GIS]
    dev_note:
      P3_MVP: true
      P1_label: #missing
      DB: #missing

  owned_by:
    oneOf:
      - type: null
      - $ref: "./04_org-chart_group.yml"
    description: Denotes the org-chart_group that owns the asset.
    integration: [GIS]
    $comment: |
      For linear assets, this value will come from the TWAG record. The org-chart list is to be shared with TWAG, through the common definition in the data hub. This TWAG integration on this particular value may not fit into the MVP scope.
    dev_note:
      P3_MVP: true
      P1_label: Owner
      DB: ASSET.COTOWNERGROUP #NEW
  
  maintained_by:
    oneOf:
      - type: null
      - $ref: "./04_org-chart_group.yml"
    description: A group responsible for the overall maintenance and repair of the asset - for example, a unit, work area, or crew.
    integration: [GIS]
    $comment: |
      At D&C, where two distinct units are responsible for preventive maintenance and reactive repair, the maintenance group should be set to organization that is one level up - i.e. D&C itself.  
    dev_note:
      P3_MVP: true
      P1_label: #missing
      DB: #missing

# LOCATION
    
  installation_or_storage_location:
    oneOf:
      - $ref: "./03_physical-location.yml"
      - type: null
    description: Either the physical location of where the asset is installed (inherited from the functional-location record) or physical location where the asset is stored (such as a storage cabinet inside a room). 
    dev_note:
      P3_MVP: true

  service_address:
    P3_MVP: true
    P1_label: service address
    oneOf:
      - $ref: MaximoServiceAddressObject
      - type: null
    $comment: |
      this is referencing Maximo's native service address object 

# DATE PROPERTIES
  
  construction_contract_number:
    oneOf: 
      - type: string
      - type: null
    description: The construction_contract_number (usually RFQ#) assigned by the City

  in_service_date:
    oneOf: 
      - type: string
      - type: null
    description: The day that the asset is turned over to the City from a contractor, or if the City installed the asset itself - the day the asset enters operation after testing is completed.
    $comment: |
      This usually coincides with "warranty start date".  However, if the asset is not delivered through a project, "warranty start date" may be empty. 

  purchase_cost:
    P3_MVP: true 
    P1_label: Purchase Cost
    DB: # Excel spreadsheet indicate ASSET.TOTALCOST, this is not correct
    description: the original purchase cost of the asset (not necessary if the asset is associated with a item master record)
    oneOf: 
      - type: number
      - type: null
  
  asset_photos:
    oneOf: 
      - type: array
        items:
          oneOf:
            - type: null
            - type: array
              items:
                $ref: "./00_common_definitions.yml/attachment_def"
      - type: null

# COMMON RECORD PROPERTIES

  duplicate_record_of:
    P3_MVP: true
    $ref: "./00_common_definitions.yml#/definitions/duplicate_record_def"
  
  record_retirement_information:
    P3_MVP: true
    $ref: "./00_common_definitions.yml#/definitions/record_retirement_def"
      
# BACKGROUND PROPERTIES POPULATED AUTOMATICALLY

  TW_asset_group:
    oneOf:
      - type: string
      - type: null
    visible: false
    read-only: true
    enum:
      - Drinking Water Network
      - Drinking Water Treatment Plants
      - Waste and Storm Water Network
      - Wastewater Treatment Plants
      - Independent Building
      - Multiple Major Systems
    $comment: |
      Note that this property is populated automatically, and not available for user to edit. Use-case: asset from the GIS will not be indexed on the hierarchy. The main use of this property is to provide a simple handle term, when one needs to summarize the collection of all assets imported from a certain layer(s) the GIS.

  specification_data:
    P3_MVP: true
    description: A set of specification property data. (The applicable properties are dependent on the definition made in the chosen class.)
    type: object
    $comment: the class dependent specifications are found in the repository folder /TWDM/4-Class_Dependent_Specifications/A-asset_class_properties

#############################################################
# RULES
#############################################################

RULE_SPEC:

  - name: valid values of owned_by property
    involves_prop: [owned_by]
    spec_ID: 410N2dr_xx
    type: [constraint_or_validation,UI_element_behaviour]
    specification: |
      - The valid range of values for selection includes the first or second of the org-chart group hierarchy, specified in the (/TWDM/3-System_Hierarchies/04_org_hierarchy.md) . For examples,
        - first level example: York Region, 
        - second level example: Toronto Water
      - The UI must only present the valid range of values to the users for selection, and the valid range of values must be presented as a hierarchy.
    checked_on: 2024-08-19

  - name: asset inheriting values from its functional-location
    involves_prop: [operated_by, maintained_by]
    spec_ID: VJ1QRgIclg
    specification: |
      - if the value of asset_x.properties.assigned_to_functional_location is functional-location_y, then  
          inherit the value of 
            - asset_x.properties.maintained_by
            - asset_x.properties.operated_by
          from the same properties of functional-location_y
    checked_on: 2024-08-20

  - name: asset present at site must have location information on record
    involves_prop: [service_address]
    spec_ID: 01J5R2F9ARJDM3RMGE9WYZWVFE
    type: [constraint_or_validation]
    specification: |
      if the value of asset_x.properties.status is either 
        - "in possession", or
        - "installed"
      then at least one of the following properties must NOT be null
        - asset_x.properties.installation_or_storage_location
        - asset_x.properties.service_address
    check_on: 2024-08-20

  - name: Asset must have a start of operation date, before it is operationally available
    spec_ID: NyG2nzL5xg
    type: [constraint_or_validation]
    specification: |
      if both of the following properties are null
          - (asset_x.properties."first date of City operation")
          - (asset_x.properties."warranty start date")
        then the value of (asset_x.properties."operating_state") CANNOT be "available (up)"

  - name: Consistency between operating state and assignment values
    spec_ID: 41OFxr8ceg
    type: [constraint_or_validation, automatic_assertion]
    specification: | 
      if an asset does not have a value in any of the following properties (i.e., all nulls), 
          - asset_x.properties."assigned_to_functional_location"
          - asset_x.properties."assigned_to_tool_user"
          - asset_x.properties."assigned_to_tool_user_group"           
        then the value of (asset_x.properties."operating_state") must be "not assigned work". The opposite must also be true.
    errorMessage: "An asset NOT assigned to a functional-location, user, or user group should not be operating and therefore would not have an operating_state"



  - name: Inheriting the asset location information from its functional-location
    spec_ID: NJdGTHLqeg
    type: [automatic_assertion]
    specification: |
        For an asset, asset_x, if 
          all of the following are true:
            - asset_x.properties."operating_state" = "installed"
            - asset_x.properties."assigned_to_functional_location" is NOT null
          and one of the following is true
            - asset_x.properties."assigned_to_functional_location".properties."asset_installation_location" is NOT null
            - asset_x.properties."assigned_to_functional_location".properties."service_address" is NOT null
        then
            (asset_x.properties."installation_or_storage_location") would be set to the value of 
              (asset_x.properties."assigned_to_functional_location".properties."asset_installation_location")
            (asset_x.properties."service_address") would be set to the value of 
              (asset_x.properties."assigned_to_functional_location".properties."service_address")

  - name: Commercially available assets having manufacturer and model information
    spec_ID: 4y3dRfLcee
    type: [constraint_or_validation]
    exempt_grandfather: true 
    specification: |
      if the value of asset_x.properties.is_a_commercially_available_product is true
        then NONE of the following properties can be null
          - asset_x.properties.product_item_master_record
          - asset_x.properties.manufacturer_name
          - asset_x.properties.product_model_information
    dev_note:
      P3_MVP: false

  - name: Asset status values for linear versus vertical
    spec_ID: 01JS0WTY8W0PAP3BKW8S6N75D9
    involves_prop: status
    type: [constraint]
    specification: |
      []TBD
  
  - name: Inheriting manufacturer and model information from a product-item
    spec_ID: 01JS13TGGB1329NRDZ8NYV6SWC
    involves_prop: [manufacturer, model_and_sub-model, product_version_or_model_year, manufacturer_PN]
    type: [automatic_assertion]
    specification: |
      []TBD

  - name: If the item master record specifies a commercial product, then import its manufacturer, model, and configuration information 
    spec_ID: 01JS28XVG6BY8FJ65BP7ZP3RYC
    involves_prop: [item_catalog_record,manufacturer,model_and_sub-model,product_version_or_model_year,manufacturer_PN] 
    type: [automatic_assertion]
    specification: |
      []TBD

  