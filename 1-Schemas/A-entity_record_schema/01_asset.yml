---
$schema: "http://json-schema.org/draft-07/schema#"
title: asset
$id: https://raw.githubusercontent.com/TW-ASMP/TWDM/main/1-Schemas/A-entity_record_schema/01_asset.yml
type: object

$comment: >

note_to_be_moved: |
  - vertical's default search will be functional location, but vertical will be assets
  - DM: there is also a long description available to the asset name. Do we lock it down? TH[] to bring up this question on Friday
  - DM: rule: data from GIS is read-only
  - [] need to express linkage to warranty

properties:

  ID:
    description: A read-only unique asset ID, generated by Maximo, to uniquely identify the asset record.
    type: string
    integration: [GIS]
    $comment: |
      - For assets coming from TWAG - Toronto Water's GIS system - the ID value would come from TWAG through the integration. #VENDOR
      - Depending on the asset class, the TWAG ID coming over would either be the facility_ID or the asset_num. #INTERNAL
      - This ID should be prefixed with a code, denoting the name space - for example "TAB-12334", where TAB would indicate the site. #VENDOR
    dev_meta:
      P3_MVP: true
      P1_label: Asset
      DB: ASSET.ASSETNUM

  name:
    description: A short description of the asset
    type: string
    $comment: |
        assumption: an non-is a specific commercial product is always built on site for a specific purpose, and would permanently occupy a functional-location. An example is an aeration tank. 
    dev_meta:
      P3_MVP: true
      P1_label: Name 
      DB: ASSET.DESCRIPTION+LONG

  feature_class:
    description: Indicates that the record is from TWAG
    integration: [GIS]
    oneOf: 
      - type: null
      - type: string
    $comment: 
    dev_meta:
      P3_MVP: true
      P1_label: Feature Class
      DB: #missing

  class:
    description: Indicates the classification of the asset
    $ref: "../B-entity_class_object_schema/01_asset_item_tool_class.yml"
    dev_meta:
      P3_MVP: true
      P1_label: #missing
      DB: #missing

  inferred_classes:
    description: Indicates the logically defined classes to which this asset is an instance. 
    oneOf: 
      - type: null
      - type: array
        items:
          $ref: "../B-entity_class_object_schema/01_asset_item_tool_class.yml"
    read-only: true
    integration: [data hub]
    $comment: A logically defined class is defined with reference to a natural class plus other attributes. An example of a complex class is the TSSA high-pressure boiler class, which is made with reference to th natural class boiler. 
    dev_meta:
      P3_MVP: false #only datafield needs to be added for future integration
      P1_label: #missing
      DB: #missing, new

# STATE AND STATUS GROUP OF PROPERTIES

  status:
    type: string
    description: Indicates whether the asset is present at the City, and more precisely, how it has been assigned. It also indicates when the knowledge of the asset's presence is missing
    enum:
      - planned
      - in possession
      - in service
      - abandoned in place
      - removed from possession
      - missing
      - Not Ready
      - Operating
      - Decommissioned
    $comment: |
      - This data field is not nullable because the lack of knowledge is explicitly expressed as "missing" or "lost", and the non-existence is expressed as "planned" or "removed from possession". #INTERNAL
      - It is possible for an asset can be assigned (or designated) to a person, group, or functional location before it is "in commission". #INTERNAL
      - The following specifies mapping to Maximo's statuses. #VENDOR.
        - planned -> Not Ready
        - in possession -> Not Ready
        - in service -> Operating
        - abandoned in place -> Decommissioned
        - removed from possession -> Decommissioned
        - missing -> Missing
    dev_meta:
      P3_MVP: true
      P1_label: status
      DB: ASSET.STATUS

  operationally_available:
    type: Boolean
    description: Indicates whether the asset is available for doing the work that it is assigned at a given moment.
    $comment: |
      - Though we are using the property named ASSET.ISRUNNING, the data will indicate "availability" in the context of reliability engineering. #INTERNAL
      - The value in this field is meaningless when the asset's status <> "in service". #INTERNAL
    dev_meta:
      P3_MVP: true
      P1_label: Asset Up?
      DB: ASSET.ISRUNNING

# COMMISSION ASSIGNMENTS

  assigned_to_functional_location:
    oneOf:
      - $ref: "./02_functional-location.yml"
      - type: null
    description: The functional-location that the asset is designated to serve. 
    $comment: |
      This value persists even if the asset is temporarily removed from the physical location associated with its functional-location (for reasons such as repair).
    dev_meta:
      P3_MVP: true
      P1_label: 
      DB:
  
  assigned_to_tool_user:
    read-only: true
    oneOf: 
      - $ref: "./08_person.yml" 
      - type: null
    description: Indicates the issuance of a (tool) asset.
    dev_meta:
      P3_MVP: true

  assigned_to_tool_user_group:
    oneOf: 
      - $ref: "./04_org-chart_group.yml"
      - type: null
    description: A group of people, such as a facility, work area, or crew to whom the asset is assigned for use. Indicates the assignment of an asset (usually a tool) that does not have a system functional-location.
    dev_meta:
      P3_MVP: true

# OWNER, OPERATOR, MAINTAINER GROUP

  owned_by:
    oneOf:
      - type: null
      - $ref: "./04_org-chart_group.yml"
    description: Denotes the org-chart_group that owns the asset.
    integration: [GIS]
    $comment: |
      For linear assets, this value will come from the TWAG record. The org-chart list is to be shared with TWAG, through the common definition in the data hub. This TWAG integration on this particular value may not fit into the MVP scope.
    dev_meta:
      P3_MVP: true
      P1_label: Owner
      DB: ASSET.COTOWNERGROUP #NEW

  owned_by_group_named:
    oneOf:
    - type: null
    - type: string
    description: A free-text value that denotes an organization value from the TWAG, which is not on the current Maximo org-chart hierarchy.
    integration: [GIS]
    $comment: |
      - This will need to be implemented in phase-1 #INTERNAL
      - Field can deprecate when both GIS and Maximo sync to the same list of organizations. #INTERNAL
    dev_meta:
      P3_MVP: true
      P1_label: #missing
      DB: #missing
  
  maintained_by:
    oneOf:
      - type: null
      - $ref: "./04_org-chart_group.yml"
    description: A group responsible for the overall maintenance and repair of the asset - for example, a unit, work area, or crew.
    integration: [GIS]
    $comment: |
      At D&C, where two distinct units are responsible for preventive maintenance and reactive repair, the maintenance group should be set to organization that is one level up - i.e. D&C itself.  
    dev_meta:
      P3_MVP: true
      P1_label: #missing
      DB: #missing

  operated_by:
    oneOf:
      - type: null 
      - $ref: "./04_org-chart_group.yml"
    description: A group responsible for the operation of the asset.
    integration: [GIS]
    dev_meta:
      P3_MVP: true
      P1_label: #missing
      DB: #missing

# LOCATION

  parent_asset:
      P3_MVP: true
      oneOf: 
        - $ref: "./01_asset.yml"
        - type: null
      description: >
        Indicates the larger discrete asset or defined collection of assets, to which this asset is a part of.  NOTE: this property is not meant to be used for specifying the system hierarchy parent - the "parent" proper on functional location records are used for that purpose.
      $comment: |
        This field is used when the asset had many components that would also need to be tracked. Such an asset may be a system on a skid, structural tank, or switchgear cabinet, in which the asset parent in the system hierarchy should be the line entity. As such we will using this field to track that the asset is also a part of a physical assembly. We would also be using this field to capture a serialized rotating component as a part of a discrete asset.
    
  installation_or_storage_location:
    oneOf:
      - $ref: "./03_physical-location.yml"
      - type: null
    description: Either the physical location of where the asset is installed (inherited from the functional-location record) or physical location where the asset is stored (such as a storage cabinet inside a room). 
    dev_meta:
      P3_MVP: true

  service_address:
    P3_MVP: true
    P1_label: service address
    oneOf:
      - $ref: MaximoServiceAddressObject
      - type: null
    $comment: |
      this is referencing Maximo's native service address object 


# PRODUCT AND TOOL ASSOCIATION GROUP
  
  is_a_commercially_available_product:
    type: boolean
    description: An asset is made under as a product of a commercial entity, as opposed to an asset that is assembled on site.
    $comment: No null value allowed because this information is self-evident

  is_mobile:
    oneOf: 
      - type: boolean
      - type: null
    dev_meta:
      P3_MVP: true 
      P1_label: 
      DB: 

  item_master_record:
    oneOf: 
      - $ref: "./05_item_master.yml"
      - type: null
    description: This field links the asset to an item record.
    dev_meta:
      P3_MVP: false
      P1_label: 
      DB:

  is_a_tool:
    P3-MVP: true
    type: boolean
    read-only: true
    description: indicates that the asset is a tool.
    $comment
    dev_meta:
      P3_MVP: false
      P1_label: 
      DB: 

  tool_master_record:
    oneOf: 
      - $ref: "./06_tool_master.yml"
      - type: null
    description: A association with a master record designates the asset as a stocked tool, which allows the tool to be checked into a storeroom and tracked as a part of an inventory. Without this association association, an asset that is a tool would be non-stocked. 
    P3_MVP: false
    P1_label: 
    DB: 

# MANUFACTURER AND MODEL

  manufacturer:
    oneOf:
    - type: null
    - type: string
    description: Identifies the manufacturing company of the asset. For example, "General Electric"
  
  model_and_sub-model:
    oneOf:
    - type: null
    - type: string
    description: For example, "Multilin 869"
  
  product_version_or_model_year:
    oneOf:
    - type: null
    - type: string
    description: Identifies the specific version of the product model. For example "v2" or "2023".
  
  manufacturer_PN:
    oneOf:
    - type: null
    - type: string
    description: The manufacturer designator identifying the exact product item.

# DATE PROPERTIES
  
  construction_contract_number:
    oneOf: 
      - type: string
      - type: null
    description: The construction_contract_number (usually RFQ#) assigned by the City

  in_service_date:
    oneOf: 
      - type: string
      - type: null
    description: The day that the asset is turned over to the City from a contractor, or if the City installed the asset itself - the day the asset enters operation after testing is completed.
    $comment: |
      This usually coincides with "warranty start date".  However, if the asset is not delivered through a project, "warranty start date" may be empty. 
  
  OEM_serial:
    oneOf: 
      - type: string
      - type: null
    description: The serial number, affixed on the asset, designated by the manufacturer.
    $comment: |
      ASMP Discussion Log: The serial number is only populated when an asset experiences a movement (except for movement for removal), or when it is being check into a storeroom. Therefore, when the value of the OEM_serial is null, it represents the fact that we do not know what the serial number is (and whether it has a serial number at all).
  
  purchase_cost:
    P3_MVP: true 
    P1_label: Purchase Cost
    DB: # Excel spreadsheet indicate ASSET.TOTALCOST, this is not correct
    description: the original purchase cost of the asset (not necessary if the asset is associated with a item master record)
    oneOf: 
      - type: number
      - type: null
  
  asset_photos:
    oneOf: 
      - type: array
        items:
          oneOf:
            - type: null
            - type: array
              items:
                $ref: "./00_common_definitions.yml/attachment_def"
      - type: null

# COMMON RECORD PROPERTIES

  duplicate_record_of:
    P3_MVP: true
    $ref: "./00_common_definitions.yml#/definitions/duplicate_record_def"
  
  record_retirement_information:
    P3_MVP: true
    $ref: "./00_common_definitions.yml#/definitions/record_retirement_def"
      
# BACKGROUND PROPERTIES POPULATED AUTOMATICALLY

  TW_asset_group:
    oneOf:
      - type: string
      - type: null
    invisible: true
    read-only: true
    enum:
      - Drinking Water Network
      - Drinking Water Treatment Plants
      - Waste and Storm Water Network
      - Wastewater Treatment Plants
      - Independent Building
      - Multiple Major Systems
    $comment: |
      Note that this property is populated automatically, and not available for user to edit. Use-case: asset from the GIS will not be indexed on the hierarchy. The main use of this property is to provide a simple handle term, when one needs to summarize the collection of all assets imported from a certain layer(s) the GIS.

  specification_data:
    P3_MVP: true
    description: A set of specification property data. (The applicable properties are dependent on the definition made in the chosen class.)
    type: object
    $comment: the class dependent specifications are found in the repository folder /TWDM/4-Class_Dependent_Specifications/A-asset_class_properties

#############################################################
# RULES
#############################################################

rule_spec:
  - name: vertical asset ID
    spec_ID: 41JeoQuvex
    involves_prop: [ID]
    type: [assertion]
    specification: |
      Upon the creation of a new vertical facility asset record generate a unique ID (such as UUID Ver4)
    $comment: |
      UUID has a distinct advantage over a simple serial number - we do not need a script to check for repetition. For instance, when onboarding assets from another system or a spreadsheet, we don't need to check the WMS to see if the ID was already taken.
    checked_on: 2024-08-15

  - name: asset naming
    spec_ID: 4ykh0m_Dle
    involves_prop: [name]
    type: [assertion]
    specification: | 
      pseudo-code:
        if is_a_commercially_available_product = true 
          asset_x.properties.name is the semi-colon delimited concatenation of:
            - asset_x.properties.class.properties.name
            - asset_x.properties.product_item_master_record.properties.product manufacturer company 
            - asset_x.properties.product_item_master_record.properties.model_and_sub-model
            - asset_x.properties.product_item_master_record.properties.product configuration code
            - asset_x.properties."OEM_serial"
        elif asset_x.properties."is_a_commercially_available_product" = FALSE
          asset_x.properties.name is the semi-colon delimited concatenation of:
            - asset_x.properties.class.properties."class name"
            - asset_x.properties."assigned_to_functional_location".properties.name
        # NOTE: actual script should contain additional condition handle formatting of the name text when there is missing data in any concatenated property.
    status: 
      checked: 2024-08-15 

  - name: hide part and material classes when classifying assets 
    involves_prop: [class]
    spec_ID: V15NNHZuxl
    type: [validation, UI]
    specification: |
      Assertion Part:
        For all assets "asset_x",
          the value of (asset_x.class.properties.only_used_as_a_part asset) must be FALSE
      UI Part:
        In all asset classification search or selection screens, eliminate or filter out all classes "class_y",
          where (class_y.properties.only_used_as_a_part asset) is true
    checked_on: 2024-08-15

  - name: valid values of owned_by property
    involves_prop: [owned_by]
    spec_ID: 410N2dr_xx
    type: [validation,UI]
    specification: |
      - The valid range of values for selection includes the first or second of the org-chart group hierarchy, specified in the (/TWDM/3-System_Hierarchies/04_org_hierarchy.md) . For examples,
        - first level example: York Region, 
        - second level example: Toronto Water
      - The UI must only present the valid range of values to the users for selection, and the valid range of values must be presented as a hierarchy.
    checked_on: 2024-08-19

  - name: asset inheriting values from its functional-location
    involves_prop: [operated_by, maintained_by]
    spec_ID: VJ1QRgIclg
    specification: |
      - if the value of asset_x.properties.assigned_to_functional_location is functional-location_y, then  
          inherit the value of 
            - asset_x.properties.maintained_by
            - asset_x.properties.operated_by
          from the same properties of functional-location_y
    checked_on: 2024-08-20

  - name: rendering of assignment_type data field.
    involves_prop: [assignment_type]
    spec_ID: 4yARRuvOex
    type: [UI]
    description: |
      the options of this property should be presented as radial button
    status: specified

  - name: Valid assignment of an asset
    spec_ID: NyrzGKwuel
    type: [validation, assertion, UI]
    description: |
      If asset_x.properties."assignment_type" = "to a functional-location", then 
        - asset_x.properties."assigned_to_functional_location" must NOT = null;
        - asset_x.properties."assigned_to_tool_user" must = null
        - asset_x.properties."assigned_to_tool_user_group" must = null
      elif .properties."assignment_type" = "to a user group", then
        - asset_x.properties."assigned_to_tool_user_group" must NOT = null;
        - asset_x.properties."assigned_to_functional_location" must = null
        - asset_x.properties."assigned_to_tool_user" must = null          
      elif asset_x.properties."assignment_type" = "to a single user", then
        - asset_x.properties."assigned_to_tool_user" must NOT = null;
        - asset_x.properties."assigned_to_functional_location" must = null
        - asset_x.properties."assigned_to_tool_user_group" must = null
      elif asset_x.properties."assignment_type" = null, then
        - asset_x.properties."assigned_to_functional_location" must = null
        - asset_x.properties."assigned_to_tool_user" must = null
        - asset_x.properties."assigned_to_tool_user_group" must = null
      Also, in the UI screen, disable the properties that should = null
    status: specified

  - name: asset present at site must have location information on record
    involves_prop: [service_address]
    spec_ID: 01J5R2F9ARJDM3RMGE9WYZWVFE
    type: [validation]
    specification: |
      if the value of asset_x.properties.status is either 
        - "in possession", or
        - "installed"
      then at least one of the following properties must NOT be null
        - asset_x.properties.installation_or_storage_location
        - asset_x.properties.service_address
    check_on: 2024-08-20

  - name: automatic value assignment to is_a_commercially_available_product property
    involves_prop: [is_a_commercially_available_product]
    spec_ID: 4Jg2gYSOee
    type: [assertion]
    specification: |
      - Upon record creation, set the value to true.
      - Upon a asset_x.properties.class value change or a re-run of the Maximo rule processor,  
          if asset_x.properties.class.properties."non-manufactured" = true;
            set the value to true;
          else set the value to FALSE.  
    status: [specified]

  - name: default value of is_a_tool property
    involves_prop: [is_a_tool]
    spec_ID: 41sz7KSdxe
    type: [assertion]
    specification: |
      - Upon record creation, set the default value to FALSE.          
      - Upon a asset_x.properties.class value change or a re-run of the Maximo rule processor,  
          if asset_x.properties.class.properties.tool = true;
            then set the value to true;        
    status: [specified, checked]

  - name: valid item master record in .properties.product_item_master_record
    spec_ID: VJGKn1I9ex
    involves_prop: [product_item_master_record]
    type: [validation]
    specification: |
      For asset_x.properties.product_item_master_record, 
        only accept a master record whose value of asset_x.properties.generic_or_specific_product is "specific commercial product". 
    status: [specified, checked]
    $comment: related to 4y3dRfLcee

  - name: serial on mobile assets
    involves_prop: [is_mobile]
    spec_ID: EyA3sYa9le
    type: [validation]
    specification: |
      For any asset_x,
        if the value of asset_x.properties.is_a_tool is true, and the value of asset_x.properties.is_mobile is also true, then
          the value of asset_x.properties.OEM_serial cannot be null. 
    check_on: 2024-08-20

  - name: enabling the tool_product_master_record property
    involves_prop: [tool_product_master_record]
    spec_ID: NyQBbeL9xl
    specification: |
      if asset_x.properties."is_a_tool" = true
        then enable (asset_x.properties."tool_product_master_record") property.      
    status: [specified, checked]

  - name: valid value of asset_x.properties.tool_product_master_record
    spec_ID: NyFFWlUcll
    type: [validation]
    specification: |
      only accept a tool_product_master_record whose .properties.generic_or_specific_product property value is "specific commercial product"   
    checked_on: 2024-08-20

  - name: an asset may either be associated with a tool or an asset, not both
    involves_prop: [tool_product_master_record]
    spec_ID: 
    type: 
    specification:
    status: TBS

  - name: linear asset id
    type: [assertion]
    spec_ID: Vku-67dDxx
    involves_prop: [ID]
    specification: |
      Upon the creation of a new asset record corresponding to a record in TWAG, through the Maximo-TWAG integration, 
        populate the TWAG_asset record's "Facility ID" value into the "ID".
    checked_on: 2024-08-15
    $comment: see comment for rule 41JeoQuvex.

  - name: Asset must have a start of operation date, before it is operationally available
    spec_ID: NyG2nzL5xg
    type: [validation]
    specification: |
      if both of the following properties are null
          - (asset_x.properties."first date of City operation")
          - (asset_x.properties."warranty start date")
        then the value of (asset_x.properties."operating_state") CANNOT be "available (up)"

  - name: Asset can be assigned exclusively to either a functional-location, user, or user group
    spec_ID: EkD-ZmIceg
    type: [validation]
    specification: | 
      only one of the following properties can have value (i.e., not null) at any given time. (It is also okay for all of them to be null) 
          - asset_x.properties."assigned_to_functional_location"
          - asset_x.properties."assigned_to_tool_user"
          - asset_x.properties."assigned_to_tool_user_group"

  - name: Consistency between operating state and assignment values
    spec_ID: 41OFxr8ceg
    type: [validation, assertion]
    specification: | 
      if an asset does not have a value in any of the following properties (i.e., all nulls), 
          - asset_x.properties."assigned_to_functional_location"
          - asset_x.properties."assigned_to_tool_user"
          - asset_x.properties."assigned_to_tool_user_group"           
        then the value of (asset_x.properties."operating_state") must be "not assigned work". The opposite must also be true.
    errorMessage: "An asset NOT assigned to a functional-location, user, or user group should not be operating and therefore would not have an operating_state"

  - name: Consistency between asset's physical status, operating state, and assignments
    spec_ID: NyG2nzL5xg
    type: [assertion, validation]
    specification: |
      If the value of (asset_x.properties."status") is NEITHER of the following
          - "installed"
          - "in possession"  
        then the following properties would take on the stated values
          asset_x.properties."operating_state" = "not applicable"
          asset_x.properties."assigned_to_functional_location" = null
          asset_x.properties."assigned_to_tool_user" = null
          asset_x.properties."assigned_to_tool_user_group" = null

  - name: asset can only be assigned to a discrete asset functional-location
    spec_ID: 4yBXuH8qle
    type: [validation]
    specification: |
      if (asset_x.properties."assigned_to_functional_location") is NOT null
          then (asset_x.properties."assigned_to_functional_location".properties.class.properties."discrete asset functional-location") = true
    errorMessage: an asset can only be assigned to a discrete asset functional-location

  - name: Inheriting the asset location information from its functional-location
    spec_ID: NJdGTHLqeg
    type: [assertion]
    specification: |
        For an asset, asset_x, if 
          all of the following are true:
            - asset_x.properties."operating_state" = "installed"
            - asset_x.properties."assigned_to_functional_location" is NOT null
          and one of the following is true
            - asset_x.properties."assigned_to_functional_location".properties."asset_installation_location" is NOT null
            - asset_x.properties."assigned_to_functional_location".properties."service_address" is NOT null
        then
            (asset_x.properties."installation_or_storage_location") would be set to the value of 
              (asset_x.properties."assigned_to_functional_location".properties."asset_installation_location")
            (asset_x.properties."service_address") would be set to the value of 
              (asset_x.properties."assigned_to_functional_location".properties."service_address")
  
  - name: over-write of manufacturer and model information
    spec_ID: 01J5RPPEKJCP11NBRW3A4XCKF7
    specification: |
      if the value of either
    status: TBS

  - name: Commercially available assets having manufacturer and model information
    spec_ID: 4y3dRfLcee
    type: [validation]
    exempt_grandfather: true 
    specification: |
      if the value of asset_x.properties.is_a_commercially_available_product is true
        then NONE of the following properties can be null
          - asset_x.properties.product_item_master_record
          - asset_x.properties.manufacturer_name
          - asset_x.properties.product_model_information
    dev_meta:
      P3_MVP: false

  - name: Asset status values for linear versus vertical
    spec_ID: 01JS0WTY8W0PAP3BKW8S6N75D9
    involves_prop: status
    type: [constraint]
    specification: |
      []TBD
  
  - name: Inheriting manufacturer and model information from a product-item
    spec_ID: 01JS13TGGB1329NRDZ8NYV6SWC
    involves_prop: [manufacturer, model_and_sub-model, product_version_or_model_year, manufacturer_PN]
    type: [assertion]
    specification: |
      []TBD

  - name: If the item master record specifies a commercial product, then import its manufacturer, model, and configuration information 
    spec_ID: 01JS28XVG6BY8FJ65BP7ZP3RYC
    involves_prop: [item_master_record,manufacturer,model_and_sub-model,product_version_or_model_year,manufacturer_PN] 
    type: [assertion]
    specification: |
      []TBD

  