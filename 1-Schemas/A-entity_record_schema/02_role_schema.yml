---
title: role
$id: roleObject
$schema: 'http://json-schema.org/draft-07/schema'
type: object

properties:

#==========================================================
#   Properties Visible on the Record 
#==========================================================

  role ID:
    type: string
    description: Also known as the "tag number" or "entity number" in Avantis's vocabulary. (Avantis is the a WMS).
    #[] to do role ID for pumping stations an chambers will be from the GIS. 
    TW_rule: 
      - name: ID of Linear Assets Represented as Role in Maximo
        id: Vku-67dDxx
        type: triggered action
        specification:
          trigger: replication creation of assetY record from the TWAG
          action: apply Facility ID from TWAG as asset ID 
        status: false

  #========================
    
  role name:
    type: string
    description: A structured and ideally unique description of the role.
    const: > #[]
      ${properties."role class".properties."class name"};
      childOf: ${properties."parent entity".properties."role number"};
      serving: ${properties."client role served".properties."role number"};
    # MT []: would you like me to move this into individual roles?

  #========================

  parent:
    $ref: roleObject
    description: References the role that is served by the larger asset, which physically subsumes the asset serving this role.

  #=======================
  
  role class:
    $ref: roleClassObject
    description: The role class denote the broad types of asset that may play the role (e.g., "breaker role"), and sometimes, more specifically, it also denotes the useful function provided by that asset in the role to the larger system (e.g., the "tie-breaker role" provides tie-breaking function to the electrical distribution system).

  #========================

  inferred class name(s):
    oneOf: 
      - type: array
        items:
          type: string
      - type: null
    items:
      type: string
    updated by system: true
    description: See the description for inferred classe names(s) made in the \TWmaximoConfig\1-Schemas\A-entity_record_schema\01_asset_schema.yml
    $comment: |
      See the comment for inferred classe names(s) made in the \TWmaximoConfig\1-Schemas\A-entity_record_schema\01_asset_schema.yml
      
  #========================


  #========================
  role status:
    type: string
    enum:
      - specified
      - active
      - eliminated
    description: |
      This is the basic life-cycle status of a role. Specified means the role is conceived and exists in some specification or design documentation. Active means the necessary supports exist for an asset to serve in the role and function of the asset being utilized. Eliminated represents a negation of either or both conditions of the active status.
    
    TW_rule: |
      #[]RULE VkiDyJcSxg: Before a role can be eliminated, all children, as well as the decendents of the role in the hierarachy must also be eliminated. 
        $comment: a procedure should to be created to allow the recursive elimination of a role and all of its children. 
      #[]RULE VygDC0Frxl: When a role is "eliminated", it must no longer be visible in any view of the role hierarchy. (Its entire branch must not be available either, because all of its decendents would be eliminated as well.)
        []Review with To ASMP: with this rule, we no longer need to have a hierarchy branched for retired roles.   
      #[]RULE EkP5qy5Sxl: If change auditing cannot be turned on, then when a role record status is "eliminated", all the specification in the record's datafields must be frozen.

  #========================

  role technical requirement description:
    type: string
    description: A free text description of the role's performance requirements that must be satisfied by the asset. For example, the lifting capacity in kilograms for a crane.
    $comment: |
      Eventually, this information should be replaced by formalized properties associated with specific role classes. For example, for the motor role class, there would be a requirement for a minimum amount of horsepower or torque. 

  #========================
  
  located in space:
    oneOf: [$ref: spaceObject, type: null]
    description: References the space in which the asset serving the role would be installed.

  #========================
  
  service address or coordinate:
    oneOf: [$ref: serviceAddress, type: null]
    description: A geo-coordinate or the nearest street address of the asset.

  #========================

  operator group:
    oneOf: [$ref: orgGroupObject, type: null]
    description: Group responsible for the operation of the asset serving in this role.
  
  inherit maintenace group value:
    type: boolean
    default value: true
  
  #========================

  maintenance group:
    oneOf: [$ref: orgGroupObject, type: null]
    description: >
      Group responsible for the preventive and reactive maintenance of the asset in the role. For example, a unit, work area, or crew. 
  
  inherit maintenance group value:
    type: boolean
    default value: true

  #========================

  operational criticality:
    oneOf: [$ref:'#/definitions/criticality rating definition', type: null] # see section 3. LOCAL OBJECT DEFINITION 
    description: A role bears high operational criticality if the loss of the asset in the role will either reduce throughput or product quality (but not product safety) of the larger system.

  inherit operational criticality value:
    type: boolean
    default value: false

  protective function criticality:
    oneOf: [$ref:'#/definitions/criticalityRatingDef', type: null] # see section 3. LOCAL OBJECT DEFINITION
    description: A role bears protective function criticality if the loss of one of its protective functions (i.e., regulatory/control/protection or containment function) will either result in a consequential release of hazard or the loss of a capability to mitigate a greater level hazard.

  inherit protective function criticality value:
    type: boolean
    default value: false
  
  #========================

  allOf:
    - $ref: genericEntityObject

  #========================
  # REMOVE THE FOLLOWING AFTER RULE ABOUT ROLE ID IS REVISED
  # GIS object ID:
  #   type: string
  #   description: This is the ID of the equivalent object (asset or role) in GIS. This value suggests the original record was created in GIS and copied to WMS through the data integration link.



#############################################################
# 2. DATA INTEGRITY RULES
#############################################################
  allOf:
    - if:
      oneOf:
        - roleClass:
            properties:
                className:
                  const: pumping station
        - roleClass:
            properties:
                className:
                  const: water treatment plant
        - roleClass:
            properties:
                className:
                  const: large chamber
      then:
        required: GIS object ID
  
  #[]RULE:
  # IN COMMON LANGUAGE: At any given time, each role may only have a single asset assigned to it (i.e., associated with the role via the asset's "assigned to role" property).

#############################################################
# 3. LOCAL OBJECT DEFINITION
#############################################################

definitions:
  criticality rating definition:
    type: object
    properties:
      rating:
        type: integer
      description:
        type: string
    enum:
      - rating: 1
        description: TBD
      - rating: 2
        description: TBD
      - rating: 3
        description: TBD
      - rating: 4
        description: TBD
      - rating: 5
        description: TBD

$comment: |
  OPEN AND TODO ITEMS:
    [x] To have discussion on what we put in for criticality
    [] explicitly specify an unoccupied asset

    [] expression of role equivalence
  
    [] expression of central role in a system

    [] certain GIS assets, such as pumping stations, or treatment facilities must be mapped over as roles
