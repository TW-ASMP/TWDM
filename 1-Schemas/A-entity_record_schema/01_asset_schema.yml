$schema: 'http://json-schema.org/draft-07/schema'
title: asset
$id: assetObject
type: object

properties:

  asset ID:
    type: string 
    description: 
      A read-only UUID, generated by the system, to uniquely identify the asset record.
    TW_rule: 
      ##
      - name: Vertical Asset ID
        id: 41JeoQuvex 
        type: triggered action
        specification:
          Upon the creation of a new vertical facility asset record, generate UUID Ver4 value as asset ID
        status: specified
        $comment: |
          UUID has a distinct advantage over a simple serial number - we do not need a script to check for repetition. For instance, when onboarding assets from another system or a spreadsheet, we don't need to check the WMS to see if the ID was already taken.
      ##
      - name: Linear Asset ID
        id: Vku-67dDxx
        type: triggered action
        specification:
          Upon the creation of a new asset record, corresponding to an asset record in TWAG (through the Maximo-TWAG integration), populate the TWAG asset record's "Facility ID" value into the "asset ID" 
        status: specified
        $comment: see comment for rule 41JeoQuvex.


  #========================

  asset name:
    type: string 
    description: The human readable short description of the asset.
    TW_rule:
      - name: Asset Naming
        id: 4ykh0m_Dle
        specification: | # In pseudo code: 
          if self.properties."manufactured asset" = TRUE 
            self.properties."asset name" is the semi-colon delimited concatenation of:
              - properties."asset class".properties."class name"
              - properties."commercial product item".properties."product manufacturer company" 
              - properties."commercial product item".properties."product model (and sub-model) description"
              - properties."commercial product item".properties."product configuration code"
              - properties."OEM serial"
          elif self.properties."manufactured asset" = FALSE
            self.properties."asset name" is the semi-colon delimited concatenation of:
              - properties."asset class".properties."class name"
              - properties."assigned to role".properties."role name"
          # NOTE: actual script should contain additional condition handle formatting of the name text when there is missing data in any concatenated property.
        status: specified 
    $comment: |
        Assumption: anything non-manufactured as built on site for a specific purpose, and would permenantly occupy a role.

  #========================

  TWAG asset:
    type: boolean
    description: A true value indicates that this record represent an asset that is also represented by a record in TWAG. 

  #========================

  privately owned:
    type: boolean
    description: A true value indicates that the asset is either owned by a private citizen or a private organization.
    $comment: |
      The value private is taken out of asset owner organization datafield because it is unambiguous to say that an asset is private asset that is located York Region.


  asset owner organization:
    oneOf: [$ref: orgGroupObject, type: null]  #referring to an object
    description: Denotes the organization that owns the asset.
    TW_rule: 
      - name: Valid Entry for Asset Owner Organization
        id: 410N2dr_xx
        type:
        specification: |
          - The valid range of values for selection includes the first, second and third levels of the organizational hierarchy, specified in the \TWmaximoConfig\3-System_Hierarchies\04_org_hierarchy.md . 
          - A check for the valid selection must be implemented with a validation script
          - The UI must only present the valid range of values to the users for selection, and the valid range of values must be presented as a hierarchy.
        status: specified

 
  #========================

  asset class:
    $ref: assetItemToolClassObject
    description: Indicates the primitive asset class to which this asset is an instance.
    TW_rule:
    - name: Exclusion of "Parts" from Asset Classification 
      id: V15NNHZuxl
      specification: |
        Asset classification list include all class instances of assetItemToolClassObject, except ones whose properties."never a stand-alone asset" value is TRUE
      status: specified

  #========================

  inferred class name(s):
    oneOf: 
      - type: array
        items:
          type: string
      - type: null
    updated by system: TRUE
    description: Indicates the complex classes to which this asset is an instance. A complex class is defined with reference to a primitive class plus other attributes. An example of a complex class is the TSSA high-pressure boiler class, which is made with reference to th primitive class boiler. 
    $comment: |
      This field will be populated by a rule processor, likely operation outside of Maximo and with integration to Maximo. An example of the inferred class is "high-pressure boiler".  The values are strings instead of classification objects because the inferred classes will not be in Maximo's asset classification.

  #========================

  manufactured asset:
    type: boolean # No null value allowed becuase this information is self-evident
    description: A manufacturered asset is one that is made under a commercial product of a commercial entity.
    TW_rule: |
      - name: Setting the Value of Manufactured Asset Property
        id: 4Jg2gYSOee
        type: 
        specification: |
          - Upon record creation, set the value to TRUE.
          - Upon a change to the value of properties."asset class",  
              if properties."asset class".properties."non-manufactured" = TRUE;
                set the value to TRUE;
              else set the value to FALSE.  
        status: specified
  
  #========================
  
  rotating tool:
    type: boolean
    description: A person uses a tool to enable or enhance the performance of certain maintenance or repair work. The term rotating tool is a Maximo terminology for a tool represented as an asset, thereby enabling maintenance work to be specified and information such as condition to be tracked. 
    TW_rule:
      - name: Inherit the Tool Designation from Asset Class
        id: 41sz7KSdxe
        specification: |
          - Upon record creation, set the default value to FALSE.          
          - Upon a change to the value of properties."asset class",  
              if properties."asset class".properties."tool" = TRUE;
                set the value to TRUE;
              else set the value to FALSE.          
        status: specified
  
  #------------

  tool master record:
    oneOf: [type: toolObject, type: null]
    description: A rotating tool asset's necessary association to a tool master record.
    TW_rule:
      - name: A Rotating Tool Must be Associated with a Tool Master Record
        id: EkGr5Yruex
        type: validation
        specification: |
          Before an asset record creation or change can be committed, a rotating tool must be associated with a tool master record.
        status: specified

  #------------

  mobile tool: 
    type: boolean
    description: An tool that is used beyond a permanent installation; instead, it is taken from place to place.
    TW_rule:
      - name: Mobile Tool Designation
        id: EJq2qFSuge
        type: 
        specification: |
          - Upon record creation, set the default value to FALSE.          
          - Upon a change to the value of properties."asset class",  
              if properties."asset class".properties."mobile tool" = TRUE;
                set the value to TRUE;
              else set the value to FALSE.
        status: specified

  #========================

  physical status:
    type: string
    description: Indicates whether the asset is present at the City, and more precisely, at its working location. It also indicates when the knowledge of the asset's presence is missing (i.e., it is missing or lost).
    enum:
      - planned
      - in possession
      - installed
      - abandoned in place
      - removed from possession
      - missing 
      - lost
    $comment: |
      This data field is not nullable becauase the lack of knowledge is explicitly expressed as "missing" or "lost", and the non-existence is expressed as "planned" or "removed from possession".

  #========================

  operating state:
    type: string
    description: Indicates whether the asset is available for doing the work that it is assigned at a given moment. Only applies to asset that is assigned to a role, user-group, or user.
    enum:
      - available (up) 
      - unavailable (down)  
      - not applicable
    $comment: |
      The "not applicable" value is being represented explicitly in the value list, because when we are reporting on equipment uptime, we need to know about the periods in which the operating state is not applicable. For example, if the asset is not assigned to any role, organization, or anyone.

  #Assignment Group
  #========================

  assignment type:
    oneOf: [type: string, type: null]
    description:
    enum:
      - to a role
      - to a user group
      - to a single user
      - not assigned
    TW_UI:
      - name: Rendering "assignment type" data field in the asset record.
        screen: asset record and any other asset creation screen
        id: 4yARRuvOex
        description: |
          the properties of .properties."assignment type" should be presented as radial button
        status: specified
      - name: Allow one of the assignment data fields to be editable, based on the value of "Assignment type"
        id: NyrzGKwuel
        screen: asset record and any other asset creation screen
        description: |
          If value = "to a role", then enable "assigned to role" property;
          elif value = "to a user group", then enable "assigned to user group" property;
          elif value = "to a single user", then enable "assigned to user" property;
          elif value = or("not assigned", null), then enable none of the above.
        status: specified
    TW_rule:
      - name: Asset assignment data consistency validation
        id: N1E0LYD_gl
        description: |
          - Implement database validation rule, consistent with the UI rule NyrzGKwuel
          - Additional note: only one of the following properties may be true at any time
            - .properties."to a role"
            - .properties."to a user group"
            - .properties."to a user"
        status: specfied
    $comment: |
      This property is added to assist with the interpretation of the NULL value in "assigned to role", "assigned to user group", or "assigned to user group" property. If the value here is "not assigned", then we know that the asset is not assigned to anything. If the value here is NULL, then we have no knowledge of whether this asset is assigned to anything or not. 
  
    
  #------------

  assigned to role:
    oneOf: [$ref: roleObject, type: null]
    description: Role that the asset is designated to play. This value persists even if the asset is temporarily removed from the location of the role (for reasons such as repair).
        
  #------------

  assigned to user group:
    oneOf: [$ref: orgGroupObject, type: null]
    description: A group of people, such as a facility, work area, or crew to whom the asset is assigned for use. Indicates the assignment of asset (usually mobile tools) that does not have a system role.

  #------------

  assigned to user:
    oneOf: [$ref: userObject, type: null]
    description: Indicates the assignment of asset (usually mobile tools) that does not have a system role.

  #========================

  maintenance group:
    oneOf: [$ref: orgGroupObject, type: null]
    description: >
      Group responsible for the overall maintenance of the asset. For example, a unit, work area, or crew. 
    TW_rule:
      - name: Asset assignment data consistency validation
        id: 
        description: |
          - if the asset is assigned to a role_x (.properties."assigned to role" value is role_x)  
              set the value here to the value of role_x.properties."maintenance group"
        status: specified
 

  #Location Group of Properties
  #========================

  located in space:
    oneOf: [$ref: spaceObject, type: null]

  #========================
  
  is a part of the larger asset:
    oneOf: [$ref: assetObject, type: null]
    updated by system: true
    $comment: |
      Though it is more elegant to represent the location of a part as the space of a larger asset, this would involve setting up a rule to automatically create a spatial location entity.  Though this is achievable in the work management system, it is not in every other system where we enter assets (e.g. EIW). Also, to always says that the asset is located in a space of a larger asset is not semantically correct. Sometimes, the asset is not so much "in" another asset then being "a part of" it.

      []RULE VkcDoPILgl #inference: This field is to be filled in by a script. The script should fill in the value of properties."asset name" value of the highest-level <discrete asset>, which this asset is a part of.

  #------------------

  service address or coordinate: 
    oneOf: [$ref: serviceAddress, type: null]
    $comment: |
      this is referencing Maximo's native service address object

  #------------------
  
  parent asset:
    oneOf: [$ref: assetObject, type: null]
    description: >
      The value in this property denotes the larger discrete asset or defined collection of assets, to which this asset is a part of.  NOTE: this property is not meant to be used for specifying the system hierarchy parent. That property is found on the role record, not the asset record. 
    $comment: |
      This field is commonly used when the asset is a part of a skid, structural tank, or switchgear cabinet, in which the asset parent in the system hierarchy should be the line entity. As such we will using this field to track that the asset is also a part of a phyical assembly.  We would also be using this field to capture a serialized rotating component as a part of another discrete asset. This field can also be used to indicate an asset membership in a Defined Collection of Assets. 

  #========================
  
  construction contract number:
    oneOf: [type: string, type: null]
    description: The construction contract number assigned by the City

  #=======================
  #RULE[] 4kqvthwPxl #validation: 
    # if properties."operating state" = "available (up)", then one or both of the data fields "first date of City operation" and "warranty start date" will need to have value (i.e., not null).

  first day of City operation:
    oneOf: [type: string, type: null]
    $comment: |
      This usually coincides with "warranty start date".  However, if the asset is not delivered through a project, "warranty start date" may be empty. 

  warranty start date:
    oneOf: [type: string, type: null]

  warranty expiration date:
    oneOf: [type: string, type: null]

  #========================

  commercial product item:
    oneOf: [$ref: itemObject, type: null]
    description: 
    # [] should only accept the subset of items that define a commercial product, it behaves just like a assets, you are simplying tracking its movement(transaction)
  

  #========================

  OEM serial:
    oneOf: [type: string, type: null]
    description: The serial number, affixed on the asset, designated by the manufacturer.
    $comment: |
      Outcome of TH's discussion within ASMP: The serial number is only populated when an asset experiences a movement (except for movement for removal), or when it is being check into a storeroom.
      Therefore, when the value of the OEM serial is null, it represents the fact that we do not know what the serial number is (and whether it has a serial number at all).
    
  #========================

  unit cost (CAD):
    oneOf: [type: number, type: null]

  #========================

  asset photo(s):
    oneOf: 
      - type: array
        items:
          type: string
          contentMediaType: image/png
      - type: null
  
  #========================

  allOf:
    - $ref: genericEntityObject

#==========================================================
#   Background Properties Populated Automatically
#==========================================================
  TW Asset Group:
    oneOf: [type: string, type: null]
    invisible: true
    inferred: true
    enum:
      - Drinking Water Network
      - Drinking Water Treatment Plants
      - Waste and Storm Water Network
      - Wastewater Treatment Plants
      - Independent Building
      - Multiple Major Systems
    $comment: |
      Note that this property is populated automatically, and not available for user to edit. Use-case: asset from the GIS will not be indexed on the hierarchy. The main use of this property is to provide a simple handle term, when one needs to summarize the collection of all assets imported from a certain layer(s) the GIS.
      
#############################################################
# DATA INTEGRITY RULES
#############################################################

allOf: 
  #Every property is required, some property can return null value. See individual property definitions for detail.
  
  - required: ["asset ID", "asset name", "asset class", "manufactured asset", "mobile tool", "status", "operating state", "assignment type", "assigned to role", "assigned to user group", "assigned to user", "maintenance group", "GIS object ID", "located in space", "service address or coordinate", "parent assembly", "delivered under project", "first day of operation", "year built", "commercial product", "does not have a OEM serial?", "OEM serial", "purchase cost", "warranty expiration date", "record retired", "record retirement reason", "major TW asset group"]

  #[]RULE bOqnNS:
    #description: If the asset manufactured asset, then the information on product and OEM serial is required.
    #code:
  - if:
      properties:
        manufactured asset:
          const: true
    then:
      not:
        anyOf:
          - properties: 
              commercial product:
                const: null
          - properties: 
              OEM serial:
                const: null
      errorMessage: "If the asset manufactured asset, then the information on product and OEM serial is required."

  #[]RULE 5aIf1K:
    #description: An asset may either be assigned to a role, user group, a user, or it could be unassigned. 
    #code:

  - oneOf:
    - oneOf:
      - properties:
          assigned to role:
            not:
              const: null
      - properties:
          assigned to user group:
            not:
              const: null     
      - properties:
          assigned to user:
            not:
              const: null
    - properties:
        assigned to role:
          const: null
        assigned to user group:
          const: null       
        assigned to user:
          const: null
    errorMessage: "Between \"assigned to role\", \"assigned to user group\", \"assigned to user\", every asset may only have one type assignment."
  

  #===============================================================
  # RULE-SET: Relation between Operating State and Asset Assignment
  #===============================================================

  #[]RULE Lgfsra: #process
    #name: consistency between "operating state" and the asset's assignment
    #description: if an asset is neither assignd to a role, group, nor someone, then its [properties."operating state"] must be "not assigned work". The opposite must also be true.
    # code:
  - if:
      properties: #(C1)
        assigned to role:
          const: null
        assigned to user group:
          const: null
        assigned to user:
          const: null
    then: #(C2)
      properties:
        operating state:
          const: not applicable
      errorMessage: "An asset NOT assigned to a role, user, or user group should not be operating and therefore would not have an operating state"


  #=====================================================
  # RULE-SET: Relation Between Status and Operating State 
  #======================================================

  #[]RULE VkUggNhHle: #process
    #name: Consistency between asset's "status" and "operating state" 
    #description: If the asset is not "installed / in possession", then it must not be said have a operating state.
    #code:
  - if: #(C1)
      properties:
        status: 
          not:
            or:  
              - const: in possession 
              - const: installed
    then: #(C2)
      properties: 
        operating state:
          const: not applicable
      errorMessage: "If an asset is not \"installed \\ in possession\" (see the status property), then it should not have an operating state."  

  - if: #(C2)
      properties:
        operating state:
          const: not applicable
    then: #(C1)
      oneOf:
        - properties:
            status:
              not:
                const: installed / in possession
        - properties:
            assigned to role:
              const: null
            assigned to user group:
              const: null
            assigned to user:
              const: null
      errorMessage: "If an asset does not have an operating state, then it is either 1) not \"installed \\ in possession\" (see the status property) or 2) not assigned to a role, user, or group."


#==========================
 #[]RULE E17jxVhSeg: #validation
  #description: an asset can only be assigned to a discrete asset role (i.e. a role that is classfied as a subclass of the discrete asset role class).
  #code:
  - if:
      properties:
        assigned to role:
          type: object
    then:
      properties:
        assigned to role:
          properties:
            discrete asset role: # property defined in the role schema
              const: true
      errorMessage: An asset can only be assigned to a discrete asset role

#==========================

 #[]RULE "If an asset is "installed" (see "status" property) (C1), and assigned to a role (see "assigned to role" property) (C2), and the role has some location information (see "service address or coordinate" and "located in space" property) (3), then the asset would have the same the location information as the role it is assigned to (C4)."

  # IN CODE: 
    # - This rule is not expressible in JSON SCHEMA. If necessary, TW will write custom validation logic.
  
  #PROCESS:  If the condition (C1), (C2) and (C3) are all true, run a process to realize condition (C4). 
#==========================

  
  =========================================

  OPEN AND TODO ITEMS:

    []  - add RULE: asset can be assigned to an asset collection and a group or a person at the same time (though it cannot be assigned to a discrete asset role and a group at the same time)

    [] - Need to have a different set of data entry (i.e. what is nullable) requirement for Linear assets
    
    [] (April 26 Review) assigned to a vehicle is missing - this is a satellite storeroom
          ANS: May 6th: TH: I am covering this with the existing property "located in space"
  


  ================================================




  
  

