---
$schema: http://json-schema.org/draft-07/schema#
title: PM
$id: https://raw.githubusercontent.com/TW-ASMP/TWDM/main/1-Schemas/A-entity_record_schema/33_PM.yml
type: object

properties:

  ID:
    description: is a read-only, unique, and permanent ID, generated by the system, to identify PM. 
    type: string
    $comment: This ID is useful for referencing, even when its name changes. 

  name:
    description: a short name for the PM, given by the creator of the PM.
    type: string

  operational_unit:
    description: indicates Toronto Water's operational unit, on the org-chart group hierarchy, such as Waste and Storm Water Pumping (symbol - WASP) or Humber Wastewater Treatment Plant (symbol - THR).
    $ref: "./04_org-chart_group.yml"

  supervisor_group:
    description: indicates a sub-group of the operational unit, that is led by a supervisor who is accountable for the performance of the specified work. 
    $ref: "./04_org-chart_group.yml"
  
  crew_assignment:
    description: identifies a crew, under the supervisor group, that is always assigned to perform the specified work
    
    oneOf:
      - type: null
      - $ref: "./04_org-chart_group.yml"
    
    comment: This value will be determined by (and must be consistent with) the maintainer_org-chart_group value - situated at a lower level of the org-chart group hierarchy

  member_of_PM_set:
    description: indicates that this PM is a member of a set of related PMs. For example, the PMs for raw water pump 1, 2, 3 are all members of a PM set named Raw Water 5-year Disassembly Maintenance. 
    oneOf:
      - type: null
      - $ref: "#/definitions/PM_set"
    rule to add []: only applicable to higher-level PM
  
  Avantis_PM:
    description: indicate the Avantis PM (the legacy WMS) that this Maximo PM (equivalent to an Avantis PM task) was a part of.
    oneOf:
      - type: null
      - type: string
    read-only: true
    comment: This field can be eliminated in the future.
    work_entity_harmonization: WR(x), WO(x), JP(x)
  
  processes_covered_by_PM:
    description: a list of all major process systems covered by the work specified in this PM.
    read-only: true
    oneOf:
      - type: null
      - type: object
        properties:
          ranking:
            type: number
          system_naming:
            type: string
    rule to add []: only applicable to higher-level PM

# WORK SPECIFICATION AT A HIGH-LEVEL

  functional-location_to_work_on:
    description: indicates functional-location at which the specified must be performed.
    oneOf:
      - type: null
      - $ref: "../A-entity_record_schema/02_functional-location.yml"

  asset:
    description: indicates the asset that is being maintained.
    oneOf:
      - type: null
      - $ref: "../A-entity_record_schema/01_asset.yml"

  job_plan:
    description: specifies the job plan for the PM, if there is no further specification within the route.
    
# PM STRUCTURE SPECIFICATION

  parent:
    description: indicates the more comprehensive PM, usually a shut-down PM, that this PM is a part of.
    oneOf:
      - type: null
      - $ref: "../A-entity_record_schema/33_PM.yml"
    $comment: PMs should be organized into a PM-set when they are meant to be performed at different times.  For example the PMs for substation line 1 and line 2 maintenance are performed on alternating years. They can be organize into a PM-Set named Main Substation Maintenance. PMs should be organized under a parent PM if they are parts of the same larger continuous process - represented by the parent - such as the winter shutdown maintenance of island treatment plant. 

  route:
    description: a sequential list of work, composed of job plans paired with an asset/functional-location. 
    oneOf:
      - type: null
      - type: object
        properties:
          sequence:
            type: number
          asset:
            oneOf:
              - type: null
              - $ref: "./01_asset.yml"
          functional-location:
            oneOf: 
              - type: null
              - $ref: "./02_functional-location.yml"
          job_plan:
            oneOf:
              - type: null
              - $ref: "./32_job_plan.yml"
    $comment: the implementation could be done with Maximo route object.    

# RESOURCES

  #Note: 
    # content: Travel time and preparation time are not being recorded explicitly on the PM. Instead they could be recorded as contributory work in the job plan route

  estimated_duration:
    description: is the estimated time to complete the activity in the job plan
    $ref: "./00_common_definitions.yml#/definitions/frequency_interval_definition"
  
  parts_or_material_requirements:
    description: identifies the parts or material required to complete a work order generated from the PM.
    oneOf:
      - type: null
      - type: array
        items:
          $ref: "./00_common_definitions.yml#/definitions/item_requirement_definition"

  tool_requirements:
    description: identifies the tools required to complete a work order generated from the PM.
    oneOf:
      - type: null
      - type: array
        items:
          $ref: "./00_common_definitions.yml#/definitions/tool_requirements_definition"

  skill_and_trade_requirements:
    description: identifies the trades and qualifications of each trade needed to complete the work.
    oneOf:
    - type: null
    - type: array
      items:
        $ref: "./00_common_definitions.yml#/definitions trade_requirement_definition"

  service_requirements:
    description: identifies (contracted) service needed to complete to complete a work order generated from the PM.
    oneOf:
      - type: null
      - type: array
        items:
          $ref: "./00_common_definitions.yml#/definitions/service_requirement_definition"

  # Work Triggering Specification

  # Note: the specification is not complete for data mapping purposes, it is complete for requirement gather

  next_due_date_based_on:
    type: string
    enum:
      - work start date
      - work completion date

  trigger_condition:  # aka work generation condition
    oneOf:
    - type: null
    - $ref: "#/definitions/time-based_trigger_specification"
    - $ref: "#/definitions/meter-based_trigger_specification"

  
  # LEGISLATIVE DESIGNATION

  compliance_level:
    $ref: "./00_common_definitions.yml#/definitions/compliance_class"
    work_entity_harmonization: WR(x), WO(_), JP(_)
  
  # COMMON RECORD PROPERTIES

  duplicate_record_of:
    P3-MVP: true
    $ref: "./00_common_definitions.yml#/definitions/duplicate_record_def"

  record_retirement_information:
    P3-MVP: true
    $ref: "./00_common_definitions.yml#/definitions/record_retirement_def"

##########################################################
# LOCAL OBJECT DEFINITIONS
##########################################################

definitions:

  time-based_trigger_specification:
    next_due_date:
      type: string
      format: date
    frequency_interval:
      $ref: "./00_common_definitions.yml#/definitions/frequency_interval_definition"

  meter-based_trigger_specification:
    reading_at_last_service_completion:
      type: number
      description: is the last recorded meter reading when service was completed.
    next_service_trigger_reading:
      type: number

    meter_condition:
      oneOf:
        - type: null
        - $ref: "./00_common_definitions.yml#/definitions/meter_condition_definition"