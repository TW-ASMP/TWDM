---
$schema: "http://json-schema.org/draft-07/schema#"
title: common properties of all entities
$id: https://raw.githubusercontent.com/TW-ASMP/TWDM/main/A-entity_record_schema/00_common_definitions.yml
  
# NOTE:
  # _: This file contains data definitions that are used multiple time, across different data objects. 

definitions:

# ATTACHMENTS

  attachment_def:
    description: 
    oneOf: 
      - type: null
      - type: array
        items:
          $ref: Maximo_DOCLINKS
  
# INVENTORY

  rotating_property_def:
    type: boolean
    $comment: |
      A rotating item is a trackable item, represented also as an asset in Maximo. When the value of this field is true, we must serialize every instance of the item. This commitment is beyond what we can presently achieve at TW. The more pragmatic starting point considered in 2024 is as follows:
        1) for the initial implementation, specify all items as non-rotating
        2) an non-rotating item definition, containing the mfr, model, and ordering_options, can be associated with any asset, through the the asset's item_product_master_record property.
        2) in the future, if we wish to convert the non-rotating item definition to a rotating item definition, we would serialize all the assets associated to the item definition, and convert them to rotating assets.

  manufacturer_and_model_def:
    type: object
    properties:
      manufacturer:
        $ref: MaximoCompanyObject
      model_and_sub-model:
        oneOf:
        - type: null
        - type: string
        description: For example, "Multilin 869"
      product_version_or_model_year:
        oneOf:
        - type: null
        - type: string
        description: Identifies the specific version of the product model. For example "v2" or "2023".
      manufacturer_PN:
        oneOf:
        - type: null
        - type: string
        description: The manufacturer designator identifying the exact product item.

# FAILURE

  failure_code_def:
    type: object
    properties:
      code:
        type: string
      name:        
        type: string
      description:        
        type: string
      failure_code_type:
        type: string
        enum:
          - problem
          - cause
          - remedy
      site:
        type: object
        $ref: MaximoSiteObject
      failure_classes:
        oneOf:
          - type: null
          - type: array
            items:
              type: object
              $ref: MaximoFailureClass
      status:
        type: string
        enum:
          - draft
          - approved
        
# RESOURCE FOR WORK SPECIFICATIONS

  item_requirement_definition:
    properties:
      item_reference:
        $ref: "./05_item_master.yml"
      required_quantity:
        type: number
      unit:
        $ref: "#/definitions/unit_of_measure"
      
  tool_requirements_definition:
    properties:
      tool_reference: # reference for both stocked and un-stocked tool
        $ref: "./06_tool_master.yml"
      required_quantity:
        type: number

  service_requirement_definition:
    properties:
      service_reference:
        $ref: "./07_service_item_master.yml"
      required_quantity:
        type: number
      unit:
        type: string
        enum: 
          - hour
          - instance

  trade_requirement_definition:
    properties:
      trade_type:
        $ref: "../B-entity_class_object_schema/08_trade_type.yml"
      required_quantity:
        type: number
      qualification_requirement:
        oneOf: 
        - type: null
        - type: array
          items:
            $ref: "../B-entity_class_object_schema/09_qualification.yml"

# UNIT OF MEASURE

  unit_of_measure:
    description: Represents a unit of measure (UOM) used in inventory management to track quantities of items.
    properties:
      name:
        description: is the full name of the unit of measure.
        type: string
        $comment: e.g., "Each", "kilogram"
      abbreviation:
        description: is the unique identifier or code for the unit of measure.
        type: string
        $comment: e.g., "EA", "kg"
      
# FREQ DEFINITION

  frequency_interval_definition:
    properties:
      frequency_quantity:
        type: number
      unit_of_time:
        type: string
        enum:
          - minute
          - hour
          - day
          - month
          - year

# RECORD STATUS AND RETIREMENT

  record_retirement_def:
    properties:
      
      record_is_active:
        type: Boolean
      
      retired_by:
        oneOf:
          - type: null
          - $ref: "./08_person.yml"
     
      reason_for_retirement:
        read-only: true
        #note:
          # _: the reason is intended to be automatically populated  
        oneOf: 
          - type: null
          - type: string
            enum:
              - "record is a duplicate of another"
              - "what the record represents is gone"
              - "what the record represents is lost"
              - "record was added by mistake"
              - "record information is out-dated"
              - "record information information inaccurate"

      date_of_actual_removal_or_departure:
        description: is the date that the entity referent of the record was removed or had departed
        oneOf:
          - type: null
          - type: string
            format: "date" 
      
      date_of_record_retirement:
        description: is the date when the record was retired
        oneOf:
          - type: null
          - type: string
            format: "date" 
        
# DUPLICATION HANDLING

  duplicate_record_def:
    oneOf: 
      - type: null
      - type: array
        items:
          type: object
          $comment: the object may other asset, functional-location, physical-location, ... records, depending on the context of where this property is used. 
  
# METERS

  meter_condition_definition:
    properties:

      meter:
        description: is a selection of a pre-defined meter object.
        $ref: "./41_meter.yml"
      
      numeric_interval_value:    
        oneOf:
          - type: null
          - type: number
      
      characteristic_trigger_value:    
        oneOf:
          - type: null
          - type: string

# COMPLIANCE REQUIREMENT DEFINITION

  compliance_requirement:
    properties:
      
      name:
        type: string
        $comment: |
          For example, 'ANSI Z358.1-2014 on weekly inspection of self-contained emergency wash equipment'.
      
      requirement_detail:
        description: provides all relevant descriptions
        type: string
        $comment: |
          The following is an example of the requirement detail text for a compliance requirement.
            applicable_asset_class:
              - emergency eye-wash
            requirement_source(s):
              - ANSI Z358.1-2014 / Emergency Eyewash & Shower Standard / 4 Emergency Showers / 4.6 Maintenance and Training
                ...
              - ANSI Z358.1-2014 / Emergency Eyewash & Shower Standard / 4 Emergency Showers / 4.5 Installation
                ...
            source_content_guide:
              - ANSI Z358.1-2014 4.6 states the requirement to check that shower still meets standards
              - ANSI Z358.1-2014 4.5 states the standards to apply for ht check
            perform_every:
              - year
        
        requirement_compliance_class:
          description: indicates the level of compliance, with legislative being the top 
          $ref: "#/compliance_class"
  
  compliance_class:
    type: string
    enum:
      - legislative
      - corporate policy
