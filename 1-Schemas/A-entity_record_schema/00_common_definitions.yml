---
$schema: "http://json-schema.org/draft-07/schema#"
title: common properties of all entities
$id: https://raw.githubusercontent.com/TW-ASMP/TWmaximoConfig/main/A-entity_record_schema/00_common_definitions.yml
  

definitions:

  # INVENTORY
  #=================================

  rotating_property_def:
  #---------------------------------------
    type: boolean
    $comment: |
      A rotating item is a trackable item, represented also as an asset in Maximo. When the value of this field is true, we must serialize every instance of the item. This commitment is beyond what we can presently achieve at TW. The more pragmatic starting point considered in 2024 is as follows:
        1) for the initial implementation, specify all items as non-rotating
        2) an non-rotating item definition, containing the mfr, model, and ordering_options, can be associated with any asset, through the the asset's item_product_master_record property.
        2) in the future, if we wish to convert the non-rotating item definition to a rotating item definition, we would serialize all the assets associated to the item definition, and convert them to rotating assets. 
    rule_spec:
      - name: value of .properties."rotating item"
        spec_ID: 4JKH1tw9gx
        type: [validation, assertion]
        specification: |
          For a given item_x, 
            the value of item_x.properties."rotating flag" is set to false, for all time 
        $comment: 
        status: specified


  manufacturer_and_model_def:
  #--------------------------
    type: object
    properties:

      manufacturer:
      ##--------------------------
        $ref: MaximoCompanyObject
      
      model_and_sub-model:
      ##--------------------------
        oneOf:
        - type: null
        - type: string
        description: For example, "Multilin 869"
      
      product_version_or_model_year:
      ##--------------------------
        oneOf:
        - type: null
        - type: string
        description: Identifies the specific version of the product model. For example "v2" or "2023".
      
      manufacturer_PN:
      ##--------------------------
        oneOf:
        - type: null
        - type: string
        description: The manufacturer designator identifying the exact product item.


  # FAILURE
  #=================================

  failure_code:

    type: object
    properties:
      
      code:
        type: string
      
      name:        
        type: string

      description:        
        type: string

      failure_code_type:
        type: string
        enum:
          - problem
          - cause
          - remedy
      
      site:
        type: object
        $ref: MaximoSiteObject
      
      failure_classes:
        oneOf:
          - type: null
          - type: array
            items:
              type: object
              $ref: MaximoFailureClass
      
      status:
        type: string
        enum:
          - draft
          - approved
        
  #=================================
  # JOB PLAN RESOURCE
  #=================================

  item_requirement_definition:
  #--------------------------
    properties:

      item_reference:
        $ref: "./05_item_master.yml"
      
      required_quantity:
        type: number
      
      unit:
        $ref: "#/definitions/unit_of_measure"
      
  tool_requirements_definition:
  #----------------------------
    properties:

      tool_reference: # reference for both stocked and un-stocked tool
        $ref: "./06_tool_master.yml"

      required_quantity:
        type: number

  service_requirement_definition:
  #------------------------------
    properties:
    
      service_reference:
        $ref: "./07_service_item_master.yml"
      
      required_quantity:
        type: number

      unit:
        type: string
        enum: >
          - hour
          - instance

  trade_requirement_definition:
  #------------------------------
    properties:

      trade_type:
        $ref: "../B-entity_class_object_schema/08_trade_type.yml"
      
      required_quantity:
        type: number

      qualification_requirement:
        oneOf: 
        - type: null
        - type: array
          items:
            $ref: "../B-entity_class_object_schema/09_qualification.yml"
      
  #=================================
  # UNIT OF MEASURE
  #=================================

  unit_of_measure:

    description: Represents a unit of measure (UOM) used in inventory management to track quantities of items.
    
    properties:
      
      code:
        
        description: is the unique identifier or code for the unit of measure.
        type: string
        $comment: e.g., "EA", "kg"
      
      name:
        
        description: is the full name of the unit of measure.
        type: string
        $comment: e.g., "Each", "kilogram"
      
  #========================
  # Record Retirement
  #========================

  record retirement definition:
    
    properties:

      record retired:
        type: Boolean
      
      reason for retirement:
        oneOf: [type: string, type: null]
        updated by system: true
        sort order: 20-20
        $comment: the value should be written by the system, from a asset or record retirement transaction. 

  frequency_interval_definition:

    properties:

      frequency_quantity:
        
        type: number


      unit_of_time:
        
        type: string
        enum:
          - minute
          - hour
          - day
          - month
          - year

  #========================
  # Record Duplication 
  #========================
  
  duplicate record of:
  
    oneOf: 
      - type: array
        items:
          $ref: "./01_asset.yml"
      - type: null

  #========================

  record retirement information:
    $ref: "./00_common_definitions.yml#/definitions/record retirement definition"

  #========================================
  # 
  #========================================

  meter_condition_definition:
    
    properties:

      meter:

        description: is a selection of a pre-defined meter.
        $ref: default_WMS_meter_object
          
      numeric_frequency_value:    
        
        oneOf:
          - type: null
          - type: number
          
      characteristic_trigger_value:    
        
        oneOf:
          - type: null
          - type: string


  reference_attachment:
    
    properties:

      document:
      document_content_class:

        type: string
        enum:
          - maintenance manual
          - asset photograph
          - 

  #========================================
  # Compliance Requirement Definition
  #========================================

  compliance_requirement:
    
    properties:

      name:
        
        type: string
        $comment: |
          For example, 'ANSI Z358.1-2014 on weekly inspection of self-contained emergency wash equipment'.

      requirement_detail:
        
        description: provides all relevant descriptions
        type: string
        $comment: |
          The following is an example of the requirement detail text for a compliance requirement.
            
            applicable_asset_class:
              - emergency eye-wash

            requirement_source(s):
              - ANSI Z358.1-2014 / Emergency Eyewash & Shower Standard / 4 Emergency Showers / 4.6 Maintenance and Training
                ...
              - ANSI Z358.1-2014 / Emergency Eyewash & Shower Standard / 4 Emergency Showers / 4.5 Installation
                ...
            
            source_content_guide:
              - ANSI Z358.1-2014 4.6 states the requirement to check that shower still meets standards
              - ANSI Z358.1-2014 4.5 states the standards to apply for ht check
            
            perform_every:
              - year
        
        requirement_compliance_class:
          
          description: indicates the level of compliance, with legislative being the top 
          $ref: "#/compliance_class"
  
  compliance_class:
    
    type: string
    enum:
      - legislative
      - corporate policy


  ###########################################
  # Common Work Entity Definition
  ###########################################