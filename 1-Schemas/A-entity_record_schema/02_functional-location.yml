---
$schema: "http://json-schema.org/draft-07/schema#"
$id: https://raw.githubusercontent.com/TW-ASMP/TWDM/main/1-Schemas/A-entity_record_schema/02_asset_functional-location_schema.yml
type: object

properties:

  ID:
    description: is the unique ID of the functional-location known as the "tag number" or "entity number" in Avantis's vocabulary. (Avantis is the a WMS). For example THC-DIG-V-0110.
    type: string
    maxLength: 50

  TWAG_ID:
    description: the unique ID from TWAG (either the asset ID or the facility ID)
    P3_MVP: true
    type: string
    integration: [GIS]

  description:
    description: is a structured description of the functional-location.
    type: string
    RULE_SPEC:
      - name: Automatic creation of functional location description
        spec_ID: V1sxf7xqze
        type: [automation]
        automation_trigger: 
          - upon the update of any involved data field in the UI
          - upon the a change commit to the record
        specification: |
          fl1 is a functional location
          if fl1.TWAG_ID == null then
            TBD
          else
            fl1.description = the semi-colon delimited concatenation of(
              - fl1.class,
              - fl1.description_of_function,
              - (lambda a, b: a if a is not Null else b)(fl.physical_location, fl.legacy_physical_location_description)
              )
        note: 
          - do not apply this rule to asset records imported from Avantis.
          - the lambda function turns the legacy text value if the physical location field is empty 
               
  description_of_function:
    description: a short description of the system function that the asset performs
    type: string
    maxLength: 50
    dev_note:  
      remark: only new assets created in Maximo must a description of function, assets imported from Avantis does not need this value. 

  class:
    description: denotes the broad types of asset that may play the functional-location (e.g., "breaker functional-location"). It can also denotes the useful function provided by an asset in the functional-location to the larger system (e.g., the "tie-breaker functional-location" provides tie-breaking function).
    $ref: "../B-entity_class_object_schema/01_physical_entity_and_functional_location_class.yml"
    RULE_SPEC:
      - name: Classes meant for classifying items cannot be used on functional location 
        spec_ID: EJRrnCrtfg
        type: [UI_options_constraint, validation] 
        specification: |
          If FL1 is a functional location then 
            FL1.class.for_items_only = false
      
      - name: The class must be applicable to the asset
        spec_ID: NyU-7vOKMx
        type: [validation, UI_options_constraint] 
        specification: |
          If a1 is an asset, then
            AND(
              a1.properties.class.properties.for_functional_locations_only == false
              a1.properties.class.properties.for_items_only == false
            )
        checked_on: 2025-08-18 
      
      - name: Functional Location class must be compatible with the asset class
        spec_ID:
        type: [automation, UI_options_constraint, validation]
        automation_trigger:
        specification: |
           
        note:

  GL_functional_area:
    description: a 10-digit code indicating the functional area
    oneOf:
      - string
      - type: null
    $comment: the functional area should be specified "natively" on the functional location object

  parent:
    description: references the functional-location that is served by the larger asset, which physically subsumes the asset serving this functional-location.
    oneOf:
      - type: null
      - $ref: "#"
    RULE_SPEC:
      - name: If an asset is assigned to a functional location and the functional location has a parent, then 
        spec_ID:  
        type: [automation] 
        specification:
          a1 and asset_y are an assets
          FL1 and fl_y are a functional locations
        
  functional_location_type:
    description:
    type: string
    enum:
      - discrete asset
      - collection
      - system or structure
    RULE_SPEC: 
    - name: only one asset can be assigned to a "discrete asset" or "system or structure" functional location
      spec_ID: 
      involves_prop: 
      type: [validation] 
      specification:

  defined_class_or_category:
    $ref: "./00_re-used_object_property_definitions.yml/definitions/defined_class_or_category_def"
  
# STATUS

  assigned_occupant:
    description: indicates the asset assigned to this functional location
    $ref: "./01_asset.yml"
    $comment: this field must agree with the assigned_to_functional_location field on the asset

  status:
    type: string
    enum:
      - specified
      - realized
      - eliminated
    description: is the life-cycle status of a functional-location.
    RULE_SPEC:
      - name: Cannot eliminate a functional location before its children are eliminated
        spec_ID: NkG_1ge9Gx
        type: [validation]
        automation_trigger:
        specification: |
          fl1, flx are functional locations
          if fl1.status == eliminated
            for all flx, flx.parent == fl1
              flx.status == eliminated
    $comment: |
      "specified" means the functional-location is conceived and exists in some specification or design documentation; "realized" means the necessary supports exist for an asset to serve in the functional-location and function of the asset being utilized; "eliminated" represents a negation of either or both conditions of the active status.
  
  up_and_available:
    type: Boolean
    description: Indicates whether the asset is available for doing the work assigned to it at any given moment.
    read-only: true
    RULE_SPEC:
      - name: a functional location is up (available) only when an asset is assigned to it and the asset is up (available).
        spec_ID: NyvtNxeqGe
        type: [automation]
        specification: |
          a1 is an asset, fl1 is a functional location
          if AND(
            - a1.assigned_to_functional_location == fl1
            - a1.up_and_available == TRUE
            )
          then fl1.up_and_available = TRUE
          else fl1.up_and_available = FALSE
            
# LOCATION

  service_address:
    oneOf: 
      - $ref: MaximoServiceAddressObject
      - type: null
    description: is the geo-coordinate or the nearest street address of the asset.
    RULE_SPEC:
      - name: the address of the functional location must be the same as the address of its physical location
        spec_ID: 01K31Z4WXXCF5NHFB85PMP01AD
        type: [validation]
        specification: |
          if FL1 is an functional location then
            FL1.properties.service_address == FL1.properties.physical_location.properties.service_address 

  physical_location:
    description: refers to the physical-location in which the asset serving the functional-location would be installed.
    oneOf: 
      - $ref: "./03_physical-location.yml"
      - type: null

  legacy_physical_location_description:
    description: the legacy, free-text, physical location description
    oneOf:
      - type: null
      - type: string
    $comment: this description field would be eliminated after all assets/functional-locations have a physical location value.

# OWNER, OPERATOR, MAINTAINER
  
  operations_unit:
    oneOf:
      - type: null 
      - $ref: "./04_org-chart_group.yml"
    description: The facility / unit operating the asset

  operated_by:
    description: is the group responsible for the operation of the asset in the functional-location.
    oneOf:
      - type: null 
      - $ref: "./04_org-chart_group.yml"

  maintained_by:
    description: is the group responsible for the overall maintenance of the asset - for example, a unit, work area, or crew.
    oneOf: 
      - type: null
      - $ref: "./04_org-chart_group.yml"

  #owned_by:
    # Not needed: ownership is not a concept applicable to functional locations.

  criticality:
    description: the overall criticality of the functional location 
    oneOf:
      - $ref: "./00_re-used_object_property_definitions.yml/definitions/criticality_rating_def"
      - type: null

# COMPLIANCE

  associated_with_compliance_activities:
    description: indicate the compliance activities that applies to the current functional location
    $ref: "./00_re-used_object_property_definitions.yml/associated_with_compliance_activities_def"
  
  assigned_asset_is_associated_with_compliance_activities:
    description: indicate the compliance activities that applies to the asset assigned to the functional location
    $ref: "./00_re-used_object_property_definitions.yml/associated_with_compliance_activities_def"

# COMMON RECORD PROPERTIES

  duplicate_record_of:
    $ref: "./00_re-used_object_property_definitions.yml#/definitions/duplicate_record_def" 

  record_retirement_information:
    $ref: "./00_re-used_object_property_definitions.yml#/definitions/record_retirement_def"
  
