---
$schema: "http://json-schema.org/draft-07/schema#"
$id: https://raw.githubusercontent.com/TW-ASMP/TWDM/main/1-Schemas/A-entity_record_schema/02_asset_functional-location_schema.yml
type: object

properties:

  ID:
    description: is the unique ID of the functional-location known as the "tag number" or "entity number" in Avantis's vocabulary. (Avantis is the a WMS). For example THC-DIG-V-0110.
    type: string

  TWAG_ID:
    description: the unique ID from TWAG.
    P3_MVP: true
    type: string
    integration: [GIS]

  description: #[] rule for concatenation
    description: is a structured description of the functional-location.
    type: string
  
  description_of_function:
    description: a short description of the system function that the asset performs
    type: string
    maxLength: 50
    dev_note:  
      remark: only new assets created in Maximo must a description of function, assets imported from Avantis does not need this value. 

  class:
    description: denotes the broad types of asset that may play the functional-location (e.g., "breaker functional-location"). It can also denotes the useful function provided by an asset in the functional-location to the larger system (e.g., the "tie-breaker functional-location" provides tie-breaking function).
    $ref: "../B-entity_class_object_schema/01_physical_entity_and_functional_location_class.yml"
    RULE_SPEC:
    - name: prevent item-only class entries when classifying functional locations 
      spec_ID: 01K2G2MBYJTH0J981M6MYVKRYF
      type: [UI_options_constraint, validation] 
      specification: |
        For any functional location, "FL_x" ->
          FL_x.class.properties.for_items_only = false

  functional_location_type: #[]complete the rule
    description:
    type: string
    enum:
      - discrete asset
      - system or structure 
      - collection
    RULE_SPEC: 
    - name: only one asset can be assigned to a "discrete asset" or "system or structure" functional location
      spec_ID: 
      involves_prop: 
      type: [validation] 
      specification:
        
  parent:
    description: references the functional-location that is served by the larger asset, which physically subsumes the asset serving this functional-location.
    $ref: "#"

  defined_class_or_category:
    $ref: "./00_re-used_object_property_definitions.yml/definitions/defined_class_or_category_def"

# STATUS

  status:
    type: string
    enum:
      - specified
      - active
      - eliminated
    description: is the life-cycle status of a functional-location.
    $comment: |
      "specified" means the functional-location is conceived and exists in some specification or design documentation; "active" means the necessary supports exist for an asset to serve in the functional-location and function of the asset being utilized; "eliminated" represents a negation of either or both conditions of the active status.
  
  last_status_update:
    description: the last time the status was updated
    type: string
    format: date
  
  up_and_available:
    type: Boolean
    description: Indicates whether the asset is available for doing the work that it is assigned at a given moment.

# LOCATION

  address:
    oneOf: 
      - $ref: MaximoServiceAddressObject
      - type: null
    description: is the geo-coordinate or the nearest street address of the asset.
  
  physical_location:
    oneOf: 
      - $ref: "./03_physical-location.yml"
      - type: null
    description: refers to the physical-location in which the asset serving the functional-location would be installed.

  physical_location_description:
    description: the legacy, free-text, physical location description
    oneOf:
      - type: null
      - type: string
    $comment: this description field would be eliminated after all assets/functional-locations have a physical location value.

# OWNER, OPERATOR, MAINTAINER
  
  operations_unit:
    oneOf:
      - type: null 
      - $ref: "./04_org-chart_group.yml"
    description: The facility / unit operating the asset

  operated_by:
    description: is the group responsible for the operation of the asset in the functional-location.
    oneOf:
      - type: null 
      - $ref: "./04_org-chart_group.yml"
  
  inherit_operated_by_from_parent:
    type: boolean
    default_value: true

  maintained_by:
    description: is the group responsible for the overall maintenance of the asset - for example, a unit, work area, or crew.
    oneOf: 
      - type: null
      - $ref: "./04_org-chart_group.yml"

  inherit_maintained_by_from_parent: 
    type: boolean
    default_value: true
  
  #owned_by:
    # Not needed: ownership is not a concept applicable to functional locations.

  criticality:
    description: the overall criticality of an asset 
    oneOf:
      - $ref: "#/definitions/criticalityRatingDef"
      - type: null

  GL_functional_area: #[] question about the elimination of this from schema made to DM
    oneOf:
      - string
      - type: null
    description: identifies the purpose or service the expense supports.

  specification_data:
    type: object
    $ref: "."
    description: is a set of functional performance specification data. (The applicable specifications are dependent on the definition made in the chosen class.)
  

# COMMON RECORD PROPERTIES

  duplicate_record_of:
    $ref: "./00_re-used_object_property_definitions.yml#/definitions/duplicate_record_def" 

  record_retirement_information:
    $ref: "./00_re-used_object_property_definitions.yml#/definitions/record_retirement_def"
  
  
#############################################################
# LOCAL OBJECT DEFINITION
#############################################################

definitions:
  criticality rating definition:
    type: object
    properties:
      rating:
        type: integer
      description:
        type: string
    enum:
      - rating: 1
        description: TBD
      - rating: 2
        description: TBD
      - rating: 3
        description: TBD
      - rating: 4
        description: TBD
      - rating: 5
        description: TBD


#############################################################
# RULES
#############################################################

RULE_SPEC:

  - name: ID of Linear Assets Represented as functional-location in Maximo
    spec_ID: Vku-67dDxx
    involves_prop: [ID]
    type: [triggered action]
    specification:
      trigger: replication creation of assetY record from the TWAG
      action: apply Facility ID from TWAG as ID 
    status: false

  - name: ID of Linear Assets Represented as functional-location in Maximo
    spec_ID: Vku-67dDxx
    involves_prop: [ID]
    type: [triggered action]
    specification:
      - if:
        oneOf:
          - assetfunctional-locationClass:
              properties:
                  className:
                    const: pumping station
          - assetfunctional-locationClass:
              properties:
                  className:
                    const: water treatment plant
          - assetfunctional-locationClass:
              properties:
                  className:
                    const: large chamber
        then:
          required: GIS_object_ID
    status: false

    #[]RULE VkiDyJcSxg: Before a functional-location can be eliminated, all children, as well as the descendants of the functional-location in the hierarchy must also be eliminated. $comment: a procedure should to be created to allow the recursive elimination of a functional-location and all of its children.

    #[]RULE VygDC0Frxl: When a functional-location is "eliminated", it must no longer be visible in any view of the functional-location hierarchy. (Its entire branch must not be available either, because all of its descendants would be eliminated as well.)
    #[]Review with To ASMP: with this rule, we no longer need to have a hierarchy branched for retired functional-locations.

    #[]RULE EkP5qy5Sxl: If change auditing cannot be turned on, then when a functional-location record status is "eliminated", all the specification in the record's data fields must be frozen.

    #[]RULE:
    # IN COMMON LANGUAGE: At any given time, each functional-location may only have a single asset assigned to it (i.e., associated with the functional-location via the asset's "assigned_to_functional_location" property).