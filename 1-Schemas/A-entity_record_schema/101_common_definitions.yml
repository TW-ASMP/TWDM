---
$schema: "http://json-schema.org/draft-07/schema#"
title: common properties of all entities
$id: https://raw.githubusercontent.com/TW-ASMP/TWmaximoConfig/main/A-entity_record_schema/101_common_definitions.yml
  

definitions:

  #===================

  rotating_item_property: 
    
    type: boolean
    $comment: |
      Used in Item and Tool.
      A rotating item is a trackable item - each instance of the item being a rotating asset record. When the value of this field is true, we must serialize every instance of the item. This commitment is beyond what we can presently achieve at TW. The more pragmatic starting point considered in 2024 is as follows:
        1) specify all items as non-rotating
        2) associate each new asset_x to a non-rotating item (have properties."item master type" = "commercially available product item") through its "commercial product item" property.
        3) if asset_x needs to be moved back into the storeroom in the future (with its full work, failure, and condition information). It would be moved into the spatial location of the storeroom as an asset, instead of being checked into the store as a rotating item.
    
    TW_rule:
    
      - name: TEMP - all items are non-rotating for intial implementation
        id: 4JKH1tw9gx
        type: validation
        specification: |
          Validate that rotating flag is set to false before committing the data for record creation.
        $comment: 
        status: specified

  #===================

  generic or specific product definition:
    
    $comment: Used in Item and Tool.
    properties: 
    # this is not defined as a object, just a set of properties

      #-----------

      generic or specific product:
        type: string
        description: indicate whether the item is defined generically in terms of its function or commodity specification or is defined or specifically in term of its product detail.
        enum:
          - generic
          - commercially available product
        $comment: |
          A generic item appropriate for a certain application is a "defined application generic" item. 
        TW_rule:
          - name: Restrict Issuing a Generic Item
            id: 4yDfkRcvlg
            specification: ""
            status: to be specified

      #------------
      
      description of generic:
        type: string
        description: For example, 14' 165/55R14 winter tire, or electrical feeder protection relay
      
      #-------------
      
      commercial product information:
        $ref: "#/definitions/manufacturer model and configuration definition"
      
      #------------
      
      product is an instance of the generic(s):
        oneOf: 
          - type: NULL
          - $ref: "./06_tool_master.yml"
        description:
      
      #------------
      
      exact same product as:
        oneOf: 
          - type: array
            items:
              $ref: "./04_item_master.yml"
          - type: NULL
        description: |
          Identifies the same commercial product item made by the same manufacturer, but differing only in item unit format. For example, the 208-litre drum item and the 5-litre bottle item of Penzoil 5W30 Synthetic Lubricant. 
        
        TW_rule:

          - name: Infer Symmetrical Equivalence between Product Items
            id: EJCnUukuex
            type: inference
            specification: ""
            status: to be specified

  
  #===================

  manufacturer model and configuration definition:

    type: object
    properties:      
      product manufacturer company:
        oneOf: 
          - type: NULL
          - $ref: MaximoCompanyObject
        description: For example, "GE Vernova"
      
      #------------
      
      product model (and sub-model) description:
        type: string
        description: For example, "Multilin 869"
        $comment: 
      
      #------------
      
      model year or product version designator:
        oneOf: [type: NULL, type: string]
        description: Identifies the specific version of the product model. For example "v2" or "2023".
      
      #------------
      
      product configuration code:
        oneOf: [type: NULL, type: string]
        description: Denotes the exact exact configuration, made among the options provided by the manufacturer. For example, "P5-G1-S1-LO-A1-R-E-H". 
      
      #------------
      
      manufacturer part number:
        oneOf: [type: NULL, type: string]
        description: The manufacturer designator identifying the exact product item.
      
      #------------
        
      required: 
        "model or commercial product name"
      oneOf:
        - required: "maker of model or commercial product"
        - required: "parent model or commercial product"
  
  #===================

  
  material or item requirement definition:
  # used in job plan

    properties:

      item reference: # reference for both stocked and un-stocked item
        $ref: "./05_item_master.yml"
      
      #------------
      
      number:
        type: number
      
      #------------
      
      unit of measure:
        $ref: "#/definitions/unit of measure definition"

  #===================
  
  tool requirement definition:
  # used in job plan

    properties:

      item reference: # reference for both stocked and un-stocked tool
        $ref: "./06_tool_master.yml"
      
      #------------
      
      number:
        type: number


  #===================

  unit of measure definition:

    properties:

      name:
      
      symbol:

  #===================

  record retirement definition:
    
    properties:
    
      #-----------

      record retired:
        type: Boolean
        sort order: 20-10
      
      #------------
      
      reason for retirement:
        oneOf: [type: string, type: NULL]
        updated by system: true
        sort order: 20-20
        $comment: the value should be written by the system, from a asset or record retirement transaction. 