---
$schema: "http://json-schema.org/draft-07/schema#"
title: common properties of all entities
$id: https://raw.githubusercontent.com/TW-ASMP/TWmaximoConfig/main/A-entity_record_schema/101_common_definitions.yml
  

definitions:

  stocked_at_TW_property_def:
    
    type: boolean
    description: a true value indicates that the item is a stocked item at the Toronto Water organization

    TW_rule:

      - name: default value of .properties.stocked_at_TW
        id: EkxMAfT5ee
        specification: |
          For a given item_or_tool_x, 
            the value of item_or_tool_x.properties.stocked_at_TW is set to false by default 
      
  #=====================
      
  rotating_property_def:
    
    type: boolean
    $comment: |
      For posterity: a rotating item is a trackable item - each instance of the item being a rotating asset record. When the value of this field is true, we must serialize every instance of the item. This commitment is beyond what we can presently achieve at TW. The more pragmatic starting point considered in 2024 is as follows:
        1) for the initial implementation, specify all items as non-rotating
        2) an non-rotating item definition, containing the mfr, model, and ordering information, can be associated with any asset, through the the asset's item_product_master_record property.
        2) in the future, if we wish to convert the non-rotating item definition to a rotating item definition, we would serialize all the assets associated to the item definition, and convert them to rotating assets. 
    
    TW_rule:
    
      - name: value of .properties."rotating item"
        id: 4JKH1tw9gx
        type: [validation, assertion]
        specification: |
          For a given item_x, 
            the value of item_x.properties."rotating flag" is set to false, for all time 
        $comment: 
        status: specified
      
  #===================

  manufacturer_and_model_definition:
    
    type: object
    properties:

      manufacturer:
        oneOf: [type: null, $ref: MaximoCompanyObject]
        description: For example, GE Vernova
      
    # this syntax effectively appends the properties defined in the referenced sub-schema
    allOf: 
      - $ref: "#/definitions/product_model_definition"

        
  #===================

  plain-text_manufacturer_and_model_definition:
    
    type: object
    properties:

      manufacturer:
        type: [null, string]
        description: For example, "GE Vernova"
      
    # this syntax effectively appends the properties defined in the referenced sub-schema
    allOf: 
      - $ref: "#/definitions/product_model_definition"

  #===================
 
  product_model_definition:
    
    type: object
    properties:

      product_model_and_sub-model:
        type: [null, string]
        description: For example, "Multilin 869"

      #------------
      
      model year or product version designator:
        type: [null, string]
        description: Identifies the specific version of the product model. For example "v2" or "2023".
      
      #------------
      
      product configuration code:
        type: [null, string]
        description: Denotes the exact exact configuration, made among the options provided by the manufacturer. For example, "P5-G1-S1-LO-A1-R-E-H". 
      
      #------------
      
      manufacturer part number:
        type: [null, string]
        description: The manufacturer designator identifying the exact product item.
      
  
  #===================

  record retirement definition:
    
    properties:
    
      #-----------

      record retired:
        type: Boolean
        sort_order: 20-10
      
      #------------
      
      reason for retirement:
        oneOf: [type: string, type: null]
        updated_by_system: true
        sort_order: 20-20
        $comment: the value should be written by the system, from a asset or record retirement transaction. 