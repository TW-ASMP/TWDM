$schema: http://json-schema.org/draft-07/schema#
title: Failure Report, Work Request, Work Order
$id: https://raw.githubusercontent.com/TW-ASMP/TWDM/main/1-Schemas/A-entity_record_schema/34_FR_WR_WO.yml

$comment: In this design, the work request doubles as a failure report.

properties:

  ID:
    description: is a read-only unique ID, generated by the system, to uniquely identify the record. 
    type: string
    implementation:
      MX_mapping: WONUM

  311_ticket_ID:
    implementation:
      MX_mapping: COTTICKETID
    $comment:
      [] to confirm the fieldname with Debbie
    
  311_request_number:
    implementation:
      $comment: |
        [] Waiting on Debbie to confirm database mapping. There is some uncertainty of this should be either  COTREQUESTNUMBER or EXTERNALREFID
  
  record_type:
    description: indicates whether this record is a work request, work order, or a reported problem.
    type: string
    read-only: true
    enum:
      # - issue                   # issue reporting removed from phase3 MVP
      - work request
      - work order
    rule_spec:
      - name: inference of record_type from status
        status: []
    $comment: |
      - Reasons for using a WO backend for WR as well
        1. phase 3 puts WRs into the scheduling process
        2. phase 3 WR contains pretty much the same columns as the WO. 
        3. D&C performs their work on (what they perceive as) SRs.  
      - Following enum value is removed, until post P3-MVP:
        - failure report

  status:
    description: indicate the status of failure report, work request, and work order
    type: string
    enum:
      #- issue reported                 # issue reporting removed from phase3 MVP
      - WR waiting on approval          # SR/WR - changed from "request made"
      - WR approved                     # SR/WR
      - WR cancelled                    # SR/WR
      - waiting on resource                 # WO
      - ready to schedule                   # WO 
      - scheduled                           # WO
      - in progress                         # WO
      - completed                           # WO
      - closed                              # WO
      - WO cancelled                        # WO
    implementation:
      MX_mapping: WO.status
    $comment: |
      from Stephen Almeida: Right now the Avantis statuses are 
        open 
        held 
        cancelled
        completed
        closed - after 90 days 
      open and held are considered to be in progress,

  following-up_on:
    description: identifies the work order to which this record is following up on.
    read-only: true
    oneOf:
      - type: null
      - $ref: "../A-entity_record_schema/35_work_order.yml"
  
  # THE OBJECT

  # functional-location_to_work_on:
  #   description: indicates functional-location at which the specified work is to be performed.
  #   oneOf:
  #     - type: null
  #     - $ref: "../A-entity_record_schema/02_functional-location.yml"
  #     #[] should have name and description, like asset_to_work_on
  #   rule_spec:
  #     - name: mutual exclusion of asset_to_work_on and functional-location_to_work_on values  
  #       spec_ID: 01JFK49T43T1TF3HBTBTDPMN5Y
  #       form: short
  #       specification: |
  #         one, but only one, of the following properties can have a non-null value:
  #           - functional-location_to_work_on
  #           - asset_to_work_on
          
  asset_to_work_on:
    description: indicates asset on which the specified work is to be performed.
    oneOf:
      - type: null
      - $ref: "../A-entity_record_schema/01_asset.yml"
        properties:
          ID:
            implementation:
              MX_mapping: WO.ASSETNUM
          name:
    implementation:
      MX_mapping: WO.ASSETNUM
      $comment: |
        multiple fields may need to represented.  
  
  asset_criticality:
    P3_MVP: false
    description: is the criticality values inherited from the asset or functional-location being worked on.
    read-only: true
    oneOf:
      - type: null
      - type: object
        properties: 
          
          rating:
            type: number
          
          description:
            type: string

  issue_found_at_address:
    description: indicates the service address in or around which a failed asset requiring maintenance is located.
    oneOf:
      - type: null
      - $ref: MaximoServiceAddressObject

  route:
    description: a sequential list of work, composed of job plans paired with an asset/functional-location. 
    oneOf:
      - type: null
      - type: object
        properties:
          
          sequence:
            type: number
          
          asset:
            oneOf:
              - type: null
              - $ref: "./01_asset.yml"

          functional-location:
            oneOf: 
              - type: null
              - $ref: "./02_functional-location.yml"

          job_plan:
            $ref: "./32_job_plan.yml"
    
    $comment: the implementation could be done with Maximo route object.    

  # FAILURE REPORTING

  description_of_issue:
    description: is a factual description of the observable aspects of a single issue.
    type: string
    implementation:
      WR_only: true

  observed_problems:
    description: is what's also known as a common symptom code (e.g., making noise, cannot start, not running).
    oneOf:
      - type: null
      - type: array
        items:
          $ref: "./00_common_definitions.yml#/definitions/failure_code"
    implementation:
      WR_only: true
    rule_spec: 
      - name: Which problem codes to show 
        spec_ID: 01JFH3ERR08WHJ0E4WRK166WRT
        form: short
        specification: []
    $comment: multiple values are allowed

  physical_causes:
    oneOf:
      - type: null
      - type: array
        items:
          properties:
            cause_code:
              description: denotes a physical-based failure condition (e.g., shaft misalignment). 
              $ref: "./00_common_definitions.yml#/definitions/failure_code"
              $comment: one failure code per request
            
              rule_spec: 
                - name: Which Cause Codes to Show
                  spec_ID: 01JFH2F04P28B4EB2HNWA68KN9
                  form: short
                  specification: |
                    - type must be "cause"
                    - [] more tbd
            
              action_spec:
                - name: Creating a New Failure Code
                  spec_ID: 01JFH2NE68W0NCSBKKSYPZRA2Z
                  form: short
                  specification: User must be able to specify new failure codes,
            
            basis_of_selection:
              description: indicates how the failure code was derived
              type: string
              enum:
                - actual observation
                - educated guess from signs
    implementation:
      WR_only: true  

  found_asset_offline:
    description: indicates whether the asset was found offline, because of the failure being logged in the this failure report
    type: boolean
    implementation:
      WR_only: true  
    $comment: if true, failure reporting is required []Rule

  took_asset_offline:
    description: indicates whether the asset had to be taken offline, because of the failure 
    type: boolean
    implementation:
      WR_only: true  
  
  # WORK DETAIL

  work_title:
    description: a short text summarizing the work that is being requested or have been approved to be performed.
    oneOf:
      - type: null
      - type: string
    
    implementation:
      MX_mapping: WO.description

  work_specification: 
    description: a sufficiently detailed description of the work being requested for the approver of the work.

    implementation:
      MX_mapping: WO.DESCRIPTION_LONGDESCRIPTION

  work_priority:
    description: a synthetic number derived from the condition of the asset function being maintained (i.e., how close is it to failure), and the importance (or criticality) of the asset function to the org-chart group's goals.

    implementation:
      MX_mapping: INTERNALPRIORITY

  job_plan:
    description: specifies the job plan for the PM, if there is no further specification within the route.

    oneOf:
      - type: null
      - type: object
        $ref: "../A-entity_record_schema/32_job_plan.yml"

    action_spec:
      name: Importing Specifications from a Job Plan
      form: short
      id: 01JFVCVT6Q5F62WAHEB001J7SX
      specification: TBD []
    
  work_type: 
    description: is the classification at the work order level
    $ref: "../B-entity_class_object_schema/33_work_type.yml"
    
    rule_spec:
      name: Failure Reporting Leads to Investigation or Repair
      form: short
      involves_prop: [work_type]
      id: 01JFVCZ9Y7G5MWP2G2DADB2G8Z
      specification: if failure is reported, then work type must either be investigative or repair

  discrete_activity_classification:
    description: is a classification often inherited from the job plan specified on the work order
    $ref: "../B-entity_class_object_schema/33_work_type.yml"
    not_on_WR: true

  site:
    description: indicates Toronto Water's operational unit, on the org-chart group hierarchy, such as Waste and Storm Water Pumping (symbol - WASP) or Humber Wastewater Treatment Plant (symbol - THR).
    $ref: "./04_org-chart_group.yml"
    
    implementation:
      $comment: WO.SITEID

  maintained_by:
    description: indicates a sub-group of the operational unit, that is led by a supervisor who is accountable for performing the work. 
    $ref: "./04_org-chart_group.yml"

    rule_spec:
      name: Inherit the maintained_by value from either the asset or the functional-location
      spec_ID: 01JFK43CJBC495TB7Y3H3VP172
      form: very short

  requires_asset_offline:
    description: indicates the work requires the asset to be offline
    oneOf:
      - type: null
      - type: string
    enum:
      - yes
      - no
      - unknown
    rule_spec:
      - name: Default value of requires_asset_offline is null
        req_spec_ID: 01JFK2J0HWVWKDK4WWK5RZCXWY  
        form: very short

  # RESPONSIBILITIES AND ASSIGNMENTS 

  crew_assignment:
    description: identifies a crew, under the supervisor group, that is always assigned to perform the specified work
    oneOf:
      - type: null
      - $ref: "./04_org-chart_group.yml"
    WO_only: true
    comment: This value will be determined by (and must be consistent with) the maintainer_org-chart_group value - situated at a lower level of the org-chart group hierarchy

  trades_assignment:
    description: identifies the individual trades-persons who will be performing the work order. 
    oneOf:
      - type: null
      - type: array
        items:
          $ref: "./08_person.yml"

  asset_covered_by_warranty_contract:
    description: indicates that the asset (or the asset in the functional-location) is currently covered by a warranty contract.
    type: boolean
    implementation:
      MX_mapping: WO.WARRANTYEXIST
    todo []: rule - determine the value from the asset's warranty information.

  warranty_expiration_date:
    description: indicates the date the warranty expires, if the asset is covered by a warranty contract.
    type: string
    format: date

    implementation:
      MX_mapping: WO.WARRANTYEXPDATE

  send_work_to_warranty_contractor:
    description: a true (or yes) value indicates that the specified work should be performed by the warranty contractor.
    type: boolean
    todo []: rule - enable this field, only if asset_covered_by_warranty_contract is true

  asset_covered_by_service_contract:
    description: indicates that the asset (or the asset in the functional-location) is currently covered by a service contract.
    type: boolean

  send_work_to_service_contractor:
    description: a true (or yes) value indicates that the specified work should be performed by a the selected service contractor.
    oneOf:
      - type: null
      - $ref: "../A-entity_record_schema/07_service_item_master.yml"
  
  supports_a_capital_project:
    description: indicate that the specified work supports the work being done be a capital project consultant or contractor.
    type: boolean

  supports_the_capital_project:
    description: indicates the specific capital project (represented as a work order)
    oneOf:
      - type: null
      - $ref: "../A-entity_record_schema/35_work_order.yml"

  # RESOURCES

  estimated_duration:
    description: is the estimated time required in hours to complete the activity in the job plan
    oneOf:
      - type: null
      - type: number

  part_or_material_requirements:
    description: identifies the parts or material required to complete a work order generated from the PM.
    oneOf:
      - type: null
      - type: array
        items:
          $ref: "./00_common_definitions.yml#/definitions/item_requirement_definition"
        
  tool_requirements:
    description: identifies the tools required to complete a work order generated from the PM.
    oneOf:
      - type: null
      - type: array
        items:
          $ref: "./00_common_definitions.yml#/definitions/tool_requirements_definition"
  
  service_requirements:
    description: identifies (contracted) service needed to complete to complete a work order generated from the PM.
    oneOf:
      - type: null
      - type: array
        items:
          $ref: "./00_common_definitions.yml#/definitions/service_requirement_definition"

  skill_and_trade_requirements:
    description: identifies the trades and qualifications of each trade needed to complete the work.
    oneOf:
      - type: null
      - type: array
        items:
          $ref: "./00_common_definitions.yml#/definitions trade_requirement_definition"

  # DATES

  issue_reported_date:
    description: is the date that the issue or failure was reported.
    oneOf:
      - type: null
      - type: string
        format: date
    
  work_requested_date:
    description: is the date when the work request was submitted.
    oneOf:
      - type: null
      - type: string
        format: date
  
  request_approval_date:
    description: is the date that the work request was approved (and when it became a work order).
    oneOf:
      - type: null
      - type: string
        format: date

  target_start_date:
    description: is the date when the work should begin (according to a certain service standard). This date is could also be called the start no later than date. It is NOT the Start No Earlier Than Date. 
    oneOf:
      - type: null
      - type: string
        format: date

  target_completion_date:
    description: is the date when the work should be completed (according to a certain service standard). Would also be called Finish no Later Than Date. 
    oneOf:
      - type: null
      - type: string
        format: date

  scheduled_start_date:
    description: is the date when the work is scheduled (by a scheduler) to begin.
    oneOf:
      - type: null
      - type: string
        format: date

  scheduled_completion_date:
    description: is the date when the work is scheduled (by a scheduler) to be completed.
    oneOf:
      - type: null
      - type: string
        format: date

  actual_start_date:
    description: is the date when the work actually began.
    oneOf:
      - type: null
      - type: string
        format: date

  actual_completion_date:
    description: is the date when the work was actually completed.
    oneOf:
      - type: null
      - type: string
        format: date

  WO_cancel_date:
    description: is the date when the work was cancelled (and the record became either a cancelled work order or work request).
    oneOf:
      - type: null
      - type: string
        format: date

  WO_closing_date:
    description: is the date when the work order was closed.
    oneOf:
      - type: null
      - type: string
        format: date

  # INHERITED FAILURE INFORMATION

  member_of_PM_set:
    description: indicates that this PM is a member of a set of related PMs. For example, the PMs for raw water pump 1, 2, 3 are all members of a PM set named Raw Water 5-year Disassembly Maintenance. 
    oneOf:
    - type: null
    - type: string

  parent_work_order:
    description: indicates the more comprehensive PM, usually a shut-down PM, that this PM is a part of.
    oneOf:
      - type: null
      - $ref: "../A-entity_record_schema/33_PM.yml"
    WO_only: true
    rule_spec:
      name: Work Type of Descendant Work Orders
      form: short
      id: 01JFVDM89RVDCE7VBVM7FDQHRD
      specification: In a work order hierarchy, the top-level work order determines the work type of all descendant work orders.   

    $comment: |
      PMs should be organized into a PM-set when they are meant to be performed at different times.  For example the PMs for substation line 1 and line 2 maintenance are performed on alternating years. They can be organize into a PM-Set named Main Substation Maintenance. PMs should be organized under a parent PM if they are parts of the same larger continuous process - represented by the parent - such as the winter shutdown maintenance of island treatment plant.

  summary_of_previous_issue_reports:
    description: presents a summary of previously reported issues and failures related to this work.
    oneOf:
      - type: null
      - type: object
        name: compiled_issue_report
        properties:
          compiled_text_summary:
            description: the compilation of all text information in a issue report, including problem code, failure code, and description.
            oneOf:
              - type: null
              - type: array
                items:
                  type: string
          photographs:
            description: photographs in the failure report. 
            oneOf:
              - type: null
              - type: array
                items:
                  $ref: "./00_common_definitions.yml/attachment_def"

  directly_mitigates_safety_risk_to_staff:
    P3_MVP: false
    description: indicates the work has impact on workers' safety
    oneOf: 
    - type: null
    - type: string
    enum:
      - yes
      - no
      - unspecified

  directly_mitigates_risk_to_public:
    P3_MVP: false
    description: indicates that the work has a direct impact on the well-being of the public
    oneOf: 
    - type: null
    - type: string
    enum:
      - yes
      - no
      - unspecified
  
  directly_mitigates_environmental_risk:
    P3_MVP: false
    description: indicates that the work has impact on environmental protection
    oneOf: 
    - type: null
    - type: string
    enum:
      - yes
      - no
      - unspecified

  # LEGISLATIVE DESIGNATION

  compliance_class:
    description: indicate that the completion of the specified work would satisfy some compliance requirement of a certain Level.
    $ref: "./00_common_definitions.yml#/definitions/compliance_class"
  
  attachments:
    description: documents or photographs that provide further supplementary information.
    oneOf:
      - type: null
      - type: array
        items:
          $ref: "./00_common_definitions.yml/attachment_def"
    
    implementation:
      MX_mapping: 
  
  
  # COMMON RECORD PROPERTIES

  duplicate_record_of:
    P3_MVP: true
    $ref: "./00_common_definitions.yml#/definitions/duplicate_record_def"

  record_retirement_information:
    $ref: "./00_common_definitions.yml#/definitions/record_retirement_def"
  
